<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/31/2012 5:49:58 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SORNA-PC"
  DTS:CreatorName="Sorna-PC\sorna"
  DTS:DTSID="{5825E990-28A4-45A9-9483-9C6810E509ED}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3006.16"
  DTS:LocaleID="1033"
  DTS:ObjectName="SSASAMODB"
  DTS:PackageType="5"
  DTS:VersionBuild="10"
  DTS:VersionGUID="{B08D4D5B-8893-46DE-86B7-22DCBC9AFEB9}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B6B68DC3-9982-44B0-9395-AAA69A10120F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLAPCube">
      <DTS:VariableValue
        DTS:DataType="8">Model</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F7C2FC55-D7B4-4F85-A692-E113E04B0784}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLAPDB">
      <DTS:VariableValue
        DTS:DataType="8">AdventureWorks Tabular Model SQL 2016</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FDB21790-3A8C-492E-BC1A-21FF65E906AB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLAPServer">
      <DTS:VariableValue
        DTS:DataType="8">SG3\SQL2016</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4EC649A9-F6F4-42DC-9C30-63488610B0A6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SSASAMODBDatabase">
      <DTS:VariableValue
        DTS:DataType="8">SSASAMODB</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E18090D3-23FE-4EE8-A596-922D751C050C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SSASAMODBServer">
      <DTS:VariableValue
        DTS:DataType="8">SG3\SQL2016</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load AMO DB"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{637510D6-8A56-4E76-8A7E-CF81E4769597}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load AMO DB"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d283575e8ba349dd97aa9f085feeaa38"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::OLAPCube,User::OLAPDB,User::OLAPServer,User::SSASAMODBDatabase,User::SSASAMODBServer">
          <ProjectItem
            Name="st_d283575e8ba349dd97aa9f085feeaa38.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_d283575e8ba349dd97aa9f085feeaa38.csproj</RootNamespace>
    <AssemblyName>ST_d283575e8ba349dd97aa9f085feeaa38.csproj</AssemblyName>
    <ProjectGuid>{9DB6D4D4-89F6-4CCD-8B53-A8CE1944A47D}</ProjectGuid>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="Microsoft.AnalysisServices, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft SQL Server\130\SDK\Assemblies\Microsoft.AnalysisServices.DLL</HintPath>
    </Reference>
    <Reference Include="Microsoft.AnalysisServices.Core, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft SQL Server\130\SDK\Assemblies\Microsoft.AnalysisServices.Core.DLL</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Microsoft.AnalysisServices;


namespace ST_d283575e8ba349dd97aa9f085feeaa38.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/
        SqlConnection SQLconn;
        SqlCommand SQLcmd;

        public void Main()
        {

            String ConnStr;
            String SQLstr;

            String ServerName;
            String DB;
            String Cube;
            String SSASAMODBServer = "";
            String SSASAMODBDatabase = "";

            ServerName = Dts.Variables["User::OLAPServer"].Value.ToString();
            DB = Dts.Variables["User::OLAPDB"].Value.ToString();
            Cube = Dts.Variables["User::OLAPCube"].Value.ToString();
            SSASAMODBServer = Dts.Variables["User::SSASAMODBServer"].Value.ToString();
            SSASAMODBDatabase = Dts.Variables["User::SSASAMODBDatabase"].Value.ToString();

            //Initial Catalog=Adventure Works DW 2008R2;";
            ConnStr = "Provider=MSOLAP;Data Source=" + ServerName + ";";

            Microsoft.AnalysisServices.Server Server = new Microsoft.AnalysisServices.Server();
            Server.Connect(ConnStr);

            

            SQLconn = new SqlConnection();

            ConnStr = "Data Source=" + SSASAMODBServer + ";Initial Catalog=" + SSASAMODBDatabase + ";Integrated Security=SSPI;";
            SQLconn.ConnectionString = ConnStr;
            SQLconn.Open();
            SQLcmd = new SqlCommand();
            SQLcmd.Connection = SQLconn;

            int IncrServerID = 1;
            int IncrDatabaseID = 0;
            int IncrDataSourceID = 0;
            int IncrDataSourceViewId = 0;
            int IncrDSVID = 0;
            int IncrTableColID = 0;
            int IncrCubeID = 0;
            int IncrCubeDimensionID = 0;
            int IncrAttributeID = 0;
            int IncrAttributeRelID = 0;
            int IncrHierarchyID = 0;
            int IncrLevelID = 0;
            int IncrMeasureGroupID = 0;
            int IncrMeasureID = 0;
            int IncrMeasureGroupDimensionID = 0;
            int IncrKPI = 0;

            int IncrAggregationDesignID = 0;
            int IncrPartitionID = 0;
            int IncrAggregationID = 0;
            int IncrProactiveCachingID = 0;


            int tmphierarchylvlID = 0;







            SQLcmd.CommandText = "sp_AMODBDeleteMetadata";
            SQLcmd.CommandType = CommandType.StoredProcedure;

            SQLcmd.Parameters.Add("@ServerName", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@DbName", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@CubeName", SqlDbType.NVarChar);

            SQLcmd.Parameters["@ServerName"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@DbName"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@CubeName"].Direction = ParameterDirection.Input;

            SQLcmd.Parameters["@ServerName"].Value = Checknull(ServerName);
            SQLcmd.Parameters["@DbName"].Value = Checknull(DB);
            SQLcmd.Parameters["@CubeName"].Value = Checknull(Cube);


            SQLcmd.ExecuteNonQuery();

            RemoveParameters();

            SQLcmd.CommandText = "sp_AMODBServer";
            SQLcmd.CommandType = CommandType.StoredProcedure;

            SQLcmd.Parameters.Add("@ServerId", SqlDbType.Int);
            SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@ConnectionString", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@ConnectionInfo", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@SessionID", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@CaptureXml", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@CaptureLog", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@Connected", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@SessionTrace", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@Version", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@Edition", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@EditionID", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@ProductLevel", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@ProductName", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@ServerMode", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@IsLoaded", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@CreatedTimestamp", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@LastSchemaUpdate", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);
            SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);

            SQLcmd.Parameters["@ServerId"].Direction = ParameterDirection.Output;
            SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@ConnectionString"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@ConnectionInfo"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@SessionID"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@CaptureXml"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@CaptureLog"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@Connected"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@SessionTrace"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@Version"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@Edition"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@EditionID"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@ProductLevel"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@ProductName"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@ServerMode"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@IsLoaded"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@CreatedTimestamp"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@LastSchemaUpdate"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;
            SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;


            SQLcmd.Parameters["@ID"].Value = Checknull(Server.ID);
            SQLcmd.Parameters["@Name"].Value = Checknull(Server.Name);
            SQLcmd.Parameters["@ConnectionString"].Value = Checknull(Server.ConnectionString);
            SQLcmd.Parameters["@ConnectionInfo"].Value = Checknull(Server.ConnectionInfo);
            SQLcmd.Parameters["@SessionID"].Value = Checknull(Server.SessionID);
            SQLcmd.Parameters["@CaptureXml"].Value = Checknull(Server.CaptureXml);
            SQLcmd.Parameters["@CaptureLog"].Value = Checknull(Server.CaptureLog);
            SQLcmd.Parameters["@Connected"].Value = Checknull(Server.Connected);
            SQLcmd.Parameters["@SessionTrace"].Value = Checknull(Server.SessionTrace);
            SQLcmd.Parameters["@Version"].Value = Checknull(Server.Version);
            SQLcmd.Parameters["@Edition"].Value = Checknull(Server.Edition);
            SQLcmd.Parameters["@EditionID"].Value = Checknull(Server.EditionID);
            SQLcmd.Parameters["@ProductLevel"].Value = Checknull(Server.ProductLevel);
            SQLcmd.Parameters["@ProductName"].Value = Checknull(Server.ProductName);
            SQLcmd.Parameters["@ServerMode"].Value = Checknull("");
            SQLcmd.Parameters["@IsLoaded"].Value = Checknull(Server.IsLoaded);
            SQLcmd.Parameters["@CreatedTimestamp"].Value = Checknull(Server.CreatedTimestamp);
            SQLcmd.Parameters["@LastSchemaUpdate"].Value = Checknull(Server.LastSchemaUpdate);
            SQLcmd.Parameters["@Description"].Value = Checknull(Server.Description);
            SQLcmd.Parameters["@SiteID"].Value = Checknull(Server.SiteID);
            SQLcmd.Parameters["@Parent"].Value = Checknull(Server.Parent);

            SQLcmd.ExecuteNonQuery();

            IncrServerID = Convert.ToInt32(SQLcmd.Parameters["@ServerId"].Value);

            RemoveParameters();


            // Database
            foreach (Database OLAPDatabase in Server.Databases)
            {
                if (DB == "" || OLAPDatabase.Name == DB)
                {

                    SQLcmd.CommandText = "sp_AMODBDatabases";
                    SQLcmd.CommandType = CommandType.StoredProcedure;

                    SQLcmd.Parameters.Add("@DatabaseId", SqlDbType.Int);
                    SQLcmd.Parameters.Add("@ServerId", SqlDbType.Int);
                    SQLcmd.Parameters.Add("@LastUpdate", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@AggregationPrefix", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@ProcessingPriority", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@EstimatedSize", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@Visible", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@Language", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@Collation", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@MasterDataSourceID", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@ReadWriteMode", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@DbStorageLocation", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@ImagePath", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@ImageUniqueID", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@ImageVersion", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@ImageUrl", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@StorageEngineUsed", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@CompatibilityLevel", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@DirectQueryMode", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@LastProcessed", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@State", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@IsLoaded", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@CreatedTimestamp", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@LastSchemaUpdate", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                    SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);

                    SQLcmd.Parameters["@DatabaseId"].Direction = ParameterDirection.Output;
                    SQLcmd.Parameters["@ServerId"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@LastUpdate"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@AggregationPrefix"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@ProcessingPriority"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@EstimatedSize"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@Visible"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@Language"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@Collation"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@MasterDataSourceID"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@ReadWriteMode"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@DbStorageLocation"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@ImagePath"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@ImageUniqueID"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@ImageVersion"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@ImageUrl"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@StorageEngineUsed"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@CompatibilityLevel"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@DirectQueryMode"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@LastProcessed"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@State"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@IsLoaded"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@CreatedTimestamp"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@LastSchemaUpdate"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                    SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;


                    SQLcmd.Parameters["@ServerId"].Value = IncrServerID;
                    SQLcmd.Parameters["@LastUpdate"].Value = Checknull(OLAPDatabase.LastUpdate);
                    SQLcmd.Parameters["@AggregationPrefix"].Value = Checknull(OLAPDatabase.AggregationPrefix);
                    SQLcmd.Parameters["@ProcessingPriority"].Value = Checknull(OLAPDatabase.ProcessingPriority);
                    SQLcmd.Parameters["@EstimatedSize"].Value = Checknull(OLAPDatabase.EstimatedSize);
                    SQLcmd.Parameters["@Visible"].Value = Checknull(OLAPDatabase.Visible);
                    SQLcmd.Parameters["@Language"].Value = Checknull(OLAPDatabase.Language);
                    SQLcmd.Parameters["@Collation"].Value = Checknull(OLAPDatabase.Collation);
                    SQLcmd.Parameters["@MasterDataSourceID"].Value = Checknull(OLAPDatabase.MasterDataSourceID);
                    SQLcmd.Parameters["@ReadWriteMode"].Value = Checknull(OLAPDatabase.ReadWriteMode);
                    SQLcmd.Parameters["@DbStorageLocation"].Value = Checknull(OLAPDatabase.DbStorageLocation);
                    SQLcmd.Parameters["@ImagePath"].Value = Checknull("");
                    SQLcmd.Parameters["@ImageUniqueID"].Value = Checknull("");
                    SQLcmd.Parameters["@ImageVersion"].Value = Checknull("");
                    SQLcmd.Parameters["@ImageUrl"].Value = Checknull("");
                    SQLcmd.Parameters["@StorageEngineUsed"].Value = Checknull("");
                    SQLcmd.Parameters["@CompatibilityLevel"].Value = Checknull("");
                    SQLcmd.Parameters["@DirectQueryMode"].Value = Checknull("");
                    SQLcmd.Parameters["@Parent"].Value = Checknull(OLAPDatabase.Parent);
                    SQLcmd.Parameters["@LastProcessed"].Value = Checknull(OLAPDatabase.LastProcessed);
                    SQLcmd.Parameters["@State"].Value = Checknull(OLAPDatabase.State);
                    SQLcmd.Parameters["@IsLoaded"].Value = Checknull(OLAPDatabase.IsLoaded);
                    SQLcmd.Parameters["@CreatedTimestamp"].Value = Checknull(OLAPDatabase.CreatedTimestamp);
                    SQLcmd.Parameters["@LastSchemaUpdate"].Value = Checknull(OLAPDatabase.LastSchemaUpdate);
                    SQLcmd.Parameters["@Description"].Value = Checknull(OLAPDatabase.Description);
                    SQLcmd.Parameters["@ID"].Value = Checknull(OLAPDatabase.ID);
                    SQLcmd.Parameters["@Name"].Value = Checknull(OLAPDatabase.Name);
                    SQLcmd.Parameters["@SiteID"].Value = Checknull(OLAPDatabase.SiteID);

                    SQLcmd.ExecuteNonQuery();

                    IncrDatabaseID = Convert.ToInt32(SQLcmd.Parameters["@DatabaseId"].Value);

                    RemoveParameters();

                    // Data Source
                    foreach (DataSource OLAPDataSource in OLAPDatabase.DataSources)
                    {

                        SQLcmd.CommandText = "sp_AMODBDataSource";
                        SQLcmd.CommandType = CommandType.StoredProcedure;

                        SQLcmd.Parameters.Add("@DataSourceId", SqlDbType.Int);
                        SQLcmd.Parameters.Add("@DatabaseId", SqlDbType.Int);
                        SQLcmd.Parameters.Add("@ConnectionString", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@ConnectionStringSecurity", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@Isolation", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@ManagedProvider", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@Timeout", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@MaxActiveConnections", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@IsLoaded", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@CreatedTimestamp", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@LastSchemaUpdate", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);

                        SQLcmd.Parameters["@DataSourceId"].Direction = ParameterDirection.Output;
                        SQLcmd.Parameters["@DatabaseId"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@ConnectionString"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@ConnectionStringSecurity"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@Isolation"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@ManagedProvider"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@Timeout"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@MaxActiveConnections"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@IsLoaded"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@CreatedTimestamp"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@LastSchemaUpdate"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;



                        SQLcmd.Parameters["@DatabaseId"].Value = Checknull(IncrDatabaseID);
                        SQLcmd.Parameters["@ConnectionString"].Value = Checknull(OLAPDataSource.ConnectionString);
                        SQLcmd.Parameters["@ConnectionStringSecurity"].Value = Checknull(OLAPDataSource.ConnectionStringSecurity);
                        SQLcmd.Parameters["@Isolation"].Value = Checknull(OLAPDataSource.Isolation);
                        SQLcmd.Parameters["@ManagedProvider"].Value = Checknull(OLAPDataSource.ManagedProvider);
                        SQLcmd.Parameters["@Timeout"].Value = Checknull(OLAPDataSource.Timeout);
                        SQLcmd.Parameters["@MaxActiveConnections"].Value = Checknull(OLAPDataSource.MaxActiveConnections);
                        SQLcmd.Parameters["@Parent"].Value = Checknull(OLAPDataSource.Parent);
                        SQLcmd.Parameters["@ParentServer"].Value = Checknull(OLAPDataSource.ParentServer);
                        SQLcmd.Parameters["@IsLoaded"].Value = Checknull(OLAPDataSource.IsLoaded);
                        SQLcmd.Parameters["@CreatedTimestamp"].Value = Checknull(OLAPDataSource.CreatedTimestamp);
                        SQLcmd.Parameters["@LastSchemaUpdate"].Value = Checknull(OLAPDataSource.LastSchemaUpdate);
                        SQLcmd.Parameters["@Description"].Value = Checknull(OLAPDataSource.Description);
                        SQLcmd.Parameters["@ID"].Value = Checknull(OLAPDataSource.ID);
                        SQLcmd.Parameters["@Name"].Value = Checknull(OLAPDataSource.Name);
                        SQLcmd.Parameters["@SiteID"].Value = Checknull(OLAPDataSource.SiteID);

                        SQLcmd.ExecuteNonQuery();

                        IncrDataSourceID = Convert.ToInt32(SQLcmd.Parameters["@DataSourceId"].Value);

                        RemoveParameters();

                    }

                    // Data Source View
                    foreach (DataSourceView DSV in OLAPDatabase.DataSourceViews)
                    {

                        SQLcmd.CommandText = "sp_AMODBDataSourceView";
                        SQLcmd.CommandType = CommandType.StoredProcedure;

                        SQLcmd.Parameters.Add("@DataSourceViewId", SqlDbType.Int);
                        SQLcmd.Parameters.Add("@DataSourceName", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@DatabaseId", SqlDbType.Int);
                        SQLcmd.Parameters.Add("@Schema", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@IsLoaded", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@CreatedTimestamp", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@LastSchemaUpdate", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                        SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);

                        SQLcmd.Parameters["@DataSourceViewId"].Direction = ParameterDirection.Output;
                        SQLcmd.Parameters["@DataSourceName"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@DatabaseId"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@Schema"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@IsLoaded"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@CreatedTimestamp"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@LastSchemaUpdate"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                        SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;


                        SQLcmd.Parameters["@DataSourceName"].Value = Checknull(DSV.DataSource);
                        SQLcmd.Parameters["@DatabaseId"].Value = Checknull(IncrDatabaseID);
                        SQLcmd.Parameters["@Schema"].Value = Checknull(DSV.Schema);
                        SQLcmd.Parameters["@Parent"].Value = Checknull(DSV.Parent);
                        SQLcmd.Parameters["@ParentServer"].Value = Checknull(DSV.ParentServer);
                        SQLcmd.Parameters["@IsLoaded"].Value = Checknull(DSV.IsLoaded);
                        SQLcmd.Parameters["@CreatedTimestamp"].Value = Checknull(DSV.CreatedTimestamp);
                        SQLcmd.Parameters["@LastSchemaUpdate"].Value = Checknull(DSV.LastSchemaUpdate);
                        SQLcmd.Parameters["@Description"].Value = Checknull(DSV.Description);
                        SQLcmd.Parameters["@ID"].Value = Checknull(DSV.ID);
                        SQLcmd.Parameters["@Name"].Value = Checknull(DSV.Name);
                        SQLcmd.Parameters["@SiteID"].Value = Checknull(DSV.SiteID);

                        SQLcmd.ExecuteNonQuery();

                        IncrDataSourceViewId = Convert.ToInt32(SQLcmd.Parameters["@DataSourceViewId"].Value);

                        RemoveParameters();

                        // Tables and Columns
                        for (int TableID = 0; TableID <= DSV.Schema.Tables.Count - 1; TableID++)
                        {
                            for (int TableColumnID = 0; TableColumnID <= DSV.Schema.Tables[TableID].Columns.Count - 1; TableColumnID++)
                            {
                                SQLcmd.CommandText = "sp_AMODBDataSourceViewTablecolumns";
                                SQLcmd.CommandType = CommandType.StoredProcedure;

                                SQLcmd.Parameters.Add("@DataSourceViewId", SqlDbType.Int);
                                SQLcmd.Parameters.Add("@AllowDBNull", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@AutoIncrement", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@AutoIncrementSeed", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@AutoIncrementStep", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Caption", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ColumnName", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Prefix", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@DataType", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@DateTimeMode", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@DefaultValue", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Expression", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@MaxLength", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Namespace", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Ordinal", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ReadOnly", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Table", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Unique", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ColumnMapping", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Site", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Container", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@DesignMode", SqlDbType.NVarChar);

                                SQLcmd.Parameters["@DataSourceViewId"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@AllowDBNull"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@AutoIncrement"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@AutoIncrementSeed"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@AutoIncrementStep"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Caption"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ColumnName"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Prefix"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@DataType"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@DateTimeMode"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@DefaultValue"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Expression"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@MaxLength"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Namespace"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Ordinal"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ReadOnly"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Table"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Unique"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ColumnMapping"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Site"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Container"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@DesignMode"].Direction = ParameterDirection.Input;

                                SQLcmd.Parameters["@DataSourceViewId"].Value = Checknull(IncrDataSourceViewId);
                                SQLcmd.Parameters["@AllowDBNull"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].AllowDBNull);
                                SQLcmd.Parameters["@AutoIncrement"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].AutoIncrement);
                                SQLcmd.Parameters["@AutoIncrementSeed"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].AutoIncrementSeed);
                                SQLcmd.Parameters["@AutoIncrementStep"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].AutoIncrementStep);
                                SQLcmd.Parameters["@Caption"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].Caption);
                                SQLcmd.Parameters["@ColumnName"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].ColumnName);
                                SQLcmd.Parameters["@Prefix"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].Prefix);
                                SQLcmd.Parameters["@DataType"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].DataType);
                                SQLcmd.Parameters["@DateTimeMode"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].DateTimeMode);
                                SQLcmd.Parameters["@DefaultValue"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].DefaultValue);
                                SQLcmd.Parameters["@Expression"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].Expression);
                                SQLcmd.Parameters["@MaxLength"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].MaxLength);
                                SQLcmd.Parameters["@Namespace"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].Namespace);
                                SQLcmd.Parameters["@Ordinal"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].Ordinal);
                                SQLcmd.Parameters["@ReadOnly"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].ReadOnly);
                                SQLcmd.Parameters["@Table"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].Table.TableName);
                                SQLcmd.Parameters["@Unique"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].Unique);
                                SQLcmd.Parameters["@ColumnMapping"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].ColumnMapping);
                                SQLcmd.Parameters["@Site"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].Site);
                                SQLcmd.Parameters["@Container"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].Container);
                                SQLcmd.Parameters["@DesignMode"].Value = Checknull(DSV.Schema.Tables[TableID].Columns[TableColumnID].DesignMode);

                                SQLcmd.ExecuteNonQuery();

                                RemoveParameters();
                            }

                            // Table Primary Keys
                            DataColumn[] tblPkeys;

                            tblPkeys = DSV.Schema.Tables[TableID].PrimaryKey;

                            for (int tblp = 0; tblp <= tblPkeys.GetUpperBound(0); tblp++)
                            {
                                SQLstr = " Update DataSourceViewTablecolumns " +
                                         " SET PrimaryKey = 1 " +
                                         " WHERE [Table] = '" + DSV.Schema.Tables[TableID].TableName + "' " +
                                         "   AND ColumnName = '" + tblPkeys[tblp].ColumnName + "'";
                                ExecuteSQL(SQLstr);
                            }


                        }
                    }

                    // Cube
                    foreach (Cube OLAPCube in OLAPDatabase.Cubes)
                    {
                        if (Cube == "" || OLAPCube.Name == Cube)
                        {

                            SQLcmd.CommandText = "sp_AMODBCube";
                            SQLcmd.CommandType = CommandType.StoredProcedure;

                            SQLcmd.Parameters.Add("@CubeId", SqlDbType.Int);
                            SQLcmd.Parameters.Add("@DatabaseId", SqlDbType.Int);
                            SQLcmd.Parameters.Add("@DataSourceId", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@DataSourceViewId", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@DefaultMdxScript", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@Language", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@Collation", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@DefaultMeasure", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@Visible", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@Source", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@MdxScripts", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@AggregationPrefix", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@ProcessingPriority", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@StorageMode", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@ProcessingMode", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@StorageLocation", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@EstimatedRows", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@ScriptCacheProcessingMode", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@ScriptErrorHandlingMode", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@AllMeasures", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@LastProcessed", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@State", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@IsLoaded", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@CreatedTimestamp", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@LastSchemaUpdate", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);
                            SQLcmd.Parameters.Add("@Container", SqlDbType.NVarChar);

                            SQLcmd.Parameters["@CubeId"].Direction = ParameterDirection.Output;
                            SQLcmd.Parameters["@DatabaseId"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@DataSourceId"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@DataSourceViewId"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@DefaultMdxScript"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@Language"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@Collation"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@DefaultMeasure"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@Visible"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@Source"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@MdxScripts"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@AggregationPrefix"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@ProcessingPriority"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@StorageMode"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@ProcessingMode"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@StorageLocation"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@EstimatedRows"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@ScriptCacheProcessingMode"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@ScriptErrorHandlingMode"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@AllMeasures"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@LastProcessed"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@State"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@IsLoaded"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@CreatedTimestamp"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@LastSchemaUpdate"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;
                            SQLcmd.Parameters["@Container"].Direction = ParameterDirection.Input;


                            SQLcmd.Parameters["@DatabaseId"].Value = Checknull(IncrDatabaseID);
                            SQLcmd.Parameters["@DataSourceId"].Value = Checknull(OLAPCube.DataSource.ID);
                            SQLcmd.Parameters["@DataSourceViewId"].Value = Checknull(OLAPCube.DataSourceView.ID);
                            if (OLAPCube.DefaultMdxScript == null)
                            {
                                SQLcmd.Parameters["@DefaultMdxScript"].Value = "";
                            }
                            else
                            {
                                SQLcmd.Parameters["@DefaultMdxScript"].Value = Checknull(OLAPCube.DefaultMdxScript.Commands[0].Text).ToString().Replace("'", "''");
                            }
                            SQLcmd.Parameters["@Language"].Value = Checknull(OLAPCube.Language);
                            SQLcmd.Parameters["@Collation"].Value = Checknull(OLAPCube.Collation);
                            SQLcmd.Parameters["@DefaultMeasure"].Value = Checknull(OLAPCube.DefaultMeasure);
                            SQLcmd.Parameters["@Visible"].Value = Checknull(OLAPCube.Visible);
                            SQLcmd.Parameters["@Source"].Value = Checknull(OLAPCube.Source);
                            SQLcmd.Parameters["@MdxScripts"].Value = Checknull("");
                            SQLcmd.Parameters["@AggregationPrefix"].Value = Checknull(OLAPCube.AggregationPrefix);
                            SQLcmd.Parameters["@ProcessingPriority"].Value = Checknull(OLAPCube.ProcessingPriority);
                            SQLcmd.Parameters["@StorageMode"].Value = Checknull(OLAPCube.StorageMode);
                            SQLcmd.Parameters["@ProcessingMode"].Value = Checknull(OLAPCube.ProcessingMode);
                            SQLcmd.Parameters["@StorageLocation"].Value = Checknull(OLAPCube.StorageLocation);
                            SQLcmd.Parameters["@EstimatedRows"].Value = Checknull(OLAPCube.EstimatedRows);
                            SQLcmd.Parameters["@ScriptCacheProcessingMode"].Value = Checknull(OLAPCube.ScriptCacheProcessingMode);
                            SQLcmd.Parameters["@ScriptErrorHandlingMode"].Value = Checknull(OLAPCube.ScriptErrorHandlingMode);
                            SQLcmd.Parameters["@AllMeasures"].Value = Checknull(OLAPCube.AllMeasures);
                            SQLcmd.Parameters["@Parent"].Value = Checknull(OLAPCube.Parent.Name);
                            SQLcmd.Parameters["@ParentServer"].Value = Checknull(OLAPCube.ParentServer.Name);
                            SQLcmd.Parameters["@LastProcessed"].Value = Checknull(OLAPCube.LastProcessed);
                            SQLcmd.Parameters["@State"].Value = Checknull(OLAPCube.State);
                            SQLcmd.Parameters["@IsLoaded"].Value = Checknull(OLAPCube.IsLoaded);
                            SQLcmd.Parameters["@CreatedTimestamp"].Value = Checknull(OLAPCube.CreatedTimestamp);
                            SQLcmd.Parameters["@LastSchemaUpdate"].Value = Checknull(OLAPCube.LastSchemaUpdate);
                            SQLcmd.Parameters["@Description"].Value = Checknull(OLAPCube.Description);
                            SQLcmd.Parameters["@ID"].Value = Checknull(OLAPCube.ID);
                            SQLcmd.Parameters["@Name"].Value = Checknull(OLAPCube.Name);
                            SQLcmd.Parameters["@SiteID"].Value = Checknull(OLAPCube.SiteID);
                            SQLcmd.Parameters["@Container"].Value = Checknull(OLAPCube.Container);

                            SQLcmd.ExecuteNonQuery();

                            IncrCubeID = Convert.ToInt32(SQLcmd.Parameters["@CubeId"].Value);

                            RemoveParameters();



                            //Cube Dimension
                            foreach (CubeDimension OLAPCubeDimension in OLAPCube.Dimensions)
                            {

                                SQLcmd.CommandText = "sp_AMODBCubeDimension";
                                SQLcmd.CommandType = CommandType.StoredProcedure;

                                SQLcmd.Parameters.Add("@CubeDimensionId", SqlDbType.Int);
                                SQLcmd.Parameters.Add("@CubeId", SqlDbType.Int);
                                SQLcmd.Parameters.Add("@DimensionID", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Visible", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@HierarchyUniqueNameStyle", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@MemberUniqueNameStyle", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@AllMemberAggregationUsage", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);

                                SQLcmd.Parameters["@CubeDimensionId"].Direction = ParameterDirection.Output;
                                SQLcmd.Parameters["@CubeId"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@DimensionID"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Visible"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@HierarchyUniqueNameStyle"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@MemberUniqueNameStyle"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@AllMemberAggregationUsage"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;


                                SQLcmd.Parameters["@CubeId"].Value = Checknull(IncrCubeID);
                                SQLcmd.Parameters["@DimensionID"].Value = Checknull(OLAPCubeDimension.DimensionID);
                                SQLcmd.Parameters["@Visible"].Value = Checknull(OLAPCubeDimension.Visible);
                                SQLcmd.Parameters["@HierarchyUniqueNameStyle"].Value = Checknull(OLAPCubeDimension.HierarchyUniqueNameStyle);
                                SQLcmd.Parameters["@MemberUniqueNameStyle"].Value = Checknull(OLAPCubeDimension.MemberUniqueNameStyle);
                                SQLcmd.Parameters["@AllMemberAggregationUsage"].Value = Checknull(OLAPCubeDimension.AllMemberAggregationUsage);
                                SQLcmd.Parameters["@Parent"].Value = Checknull(OLAPCubeDimension.Parent.Name);
                                SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(OLAPCubeDimension.ParentDatabase.Name);
                                SQLcmd.Parameters["@ParentServer"].Value = Checknull(OLAPCubeDimension.ParentServer.Name);
                                SQLcmd.Parameters["@ID"].Value = Checknull(OLAPCubeDimension.ID);
                                SQLcmd.Parameters["@Name"].Value = Checknull(OLAPCubeDimension.Name);
                                SQLcmd.Parameters["@Description"].Value = Checknull(OLAPCubeDimension.Description);
                                SQLcmd.Parameters["@SiteID"].Value = Checknull(OLAPCubeDimension.SiteID);

                                SQLcmd.ExecuteNonQuery();

                                IncrCubeDimensionID = Convert.ToInt32(SQLcmd.Parameters["@CubeDimensionId"].Value);

                                RemoveParameters();


                                //Dimension Attribute
                                foreach (CubeAttribute DimAttrib in OLAPCubeDimension.Attributes)
                                {

                                    SQLcmd.CommandText = "sp_AMODBDimensionAttribute";
                                    SQLcmd.CommandType = CommandType.StoredProcedure;

                                    SQLcmd.Parameters.Add("@CubeDimensionId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@AttributeId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@Type", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Usage", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Source", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@EstimatedCount", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@NameColumn", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@DiscretizationMethod", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@DiscretizationBucketCount", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@RootMemberIf", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@OrderBy", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@DefaultMember", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@OrderByAttributeID", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@SkippedLevelsColumn", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@NamingTemplate", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@NamingTemplateTranslations", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@MembersWithData", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@MembersWithDataCaption", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@CustomRollupColumn", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@CustomRollupPropertiesColumn", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@UnaryOperatorColumn", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ValueColumn", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AttributeHierarchyOrdered", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@MemberNamesUnique", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@IsAggregatable", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AttributeHierarchyEnabled", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AttributeHierarchyOptimizedState", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AttributeHierarchyVisible", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AttributeHierarchyDisplayFolder", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@KeyUniquenessGuarantee", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@GroupingBehavior", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@InstanceSelection", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ProcessingState", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AttributeHierarchyProcessingState", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@FormatString", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@VisualizationProperties", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@OrderByAttribute", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);


                                    SQLcmd.Parameters["@CubeDimensionId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AttributeId"].Direction = ParameterDirection.Output;
                                    SQLcmd.Parameters["@Type"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Usage"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Source"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@EstimatedCount"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@NameColumn"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DiscretizationMethod"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DiscretizationBucketCount"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@RootMemberIf"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@OrderBy"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DefaultMember"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@OrderByAttributeID"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@SkippedLevelsColumn"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@NamingTemplate"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@NamingTemplateTranslations"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@MembersWithData"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@MembersWithDataCaption"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@CustomRollupColumn"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@CustomRollupPropertiesColumn"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@UnaryOperatorColumn"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ValueColumn"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AttributeHierarchyOrdered"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@MemberNamesUnique"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@IsAggregatable"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AttributeHierarchyEnabled"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AttributeHierarchyOptimizedState"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AttributeHierarchyVisible"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AttributeHierarchyDisplayFolder"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@KeyUniquenessGuarantee"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@GroupingBehavior"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@InstanceSelection"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ProcessingState"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AttributeHierarchyProcessingState"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@FormatString"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@VisualizationProperties"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@OrderByAttribute"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;

                                    SQLcmd.Parameters["@CubeDimensionId"].Value = Checknull(IncrCubeDimensionID);
                                    SQLcmd.Parameters["@Type"].Value = Checknull(DimAttrib.Attribute.Type);
                                    SQLcmd.Parameters["@Usage"].Value = Checknull(DimAttrib.Attribute.Usage);
                                    SQLcmd.Parameters["@Source"].Value = Checknull(DimAttrib.Attribute.Source);
                                    SQLcmd.Parameters["@EstimatedCount"].Value = Checknull(DimAttrib.Attribute.EstimatedCount);
                                    SQLcmd.Parameters["@NameColumn"].Value = Checknull(DimAttrib.Attribute.NameColumn);
                                    SQLcmd.Parameters["@DiscretizationMethod"].Value = Checknull(DimAttrib.Attribute.DiscretizationMethod);
                                    SQLcmd.Parameters["@DiscretizationBucketCount"].Value = Checknull(DimAttrib.Attribute.DiscretizationBucketCount);
                                    SQLcmd.Parameters["@RootMemberIf"].Value = Checknull(DimAttrib.Attribute.RootMemberIf);
                                    SQLcmd.Parameters["@OrderBy"].Value = Checknull(DimAttrib.Attribute.OrderBy);
                                    SQLcmd.Parameters["@DefaultMember"].Value = Checknull(DimAttrib.Attribute.DefaultMember);
                                    SQLcmd.Parameters["@OrderByAttributeID"].Value = Checknull(DimAttrib.Attribute.OrderByAttributeID);
                                    SQLcmd.Parameters["@SkippedLevelsColumn"].Value = Checknull(Checknull(DimAttrib.Attribute.SkippedLevelsColumn));
                                    SQLcmd.Parameters["@NamingTemplate"].Value = Checknull(DimAttrib.Attribute.NamingTemplate);
                                    SQLcmd.Parameters["@NamingTemplateTranslations"].Value = Checknull("");
                                    SQLcmd.Parameters["@MembersWithData"].Value = Checknull(DimAttrib.Attribute.MembersWithData);
                                    SQLcmd.Parameters["@MembersWithDataCaption"].Value = Checknull(DimAttrib.Attribute.MembersWithDataCaption);
                                    SQLcmd.Parameters["@CustomRollupColumn"].Value = Checknull(Checknull(DimAttrib.Attribute.CustomRollupColumn));
                                    SQLcmd.Parameters["@CustomRollupPropertiesColumn"].Value = Checknull(Checknull(DimAttrib.Attribute.CustomRollupPropertiesColumn));
                                    SQLcmd.Parameters["@UnaryOperatorColumn"].Value = Checknull(Checknull(DimAttrib.Attribute.UnaryOperatorColumn));
                                    SQLcmd.Parameters["@ValueColumn"].Value = Checknull(DimAttrib.Attribute.ValueColumn);
                                    SQLcmd.Parameters["@AttributeHierarchyOrdered"].Value = Checknull(DimAttrib.Attribute.AttributeHierarchyOrdered);
                                    SQLcmd.Parameters["@MemberNamesUnique"].Value = Checknull(DimAttrib.Attribute.MemberNamesUnique);
                                    SQLcmd.Parameters["@IsAggregatable"].Value = Checknull(DimAttrib.Attribute.IsAggregatable);
                                    SQLcmd.Parameters["@AttributeHierarchyEnabled"].Value = Checknull(DimAttrib.Attribute.AttributeHierarchyEnabled);
                                    SQLcmd.Parameters["@AttributeHierarchyOptimizedState"].Value = Checknull(DimAttrib.Attribute.AttributeHierarchyOptimizedState);
                                    SQLcmd.Parameters["@AttributeHierarchyVisible"].Value = Checknull(DimAttrib.Attribute.AttributeHierarchyVisible);
                                    SQLcmd.Parameters["@AttributeHierarchyDisplayFolder"].Value = Checknull(DimAttrib.Attribute.AttributeHierarchyDisplayFolder);
                                    SQLcmd.Parameters["@KeyUniquenessGuarantee"].Value = Checknull(DimAttrib.Attribute.KeyUniquenessGuarantee);
                                    SQLcmd.Parameters["@GroupingBehavior"].Value = Checknull(DimAttrib.Attribute.GroupingBehavior);
                                    SQLcmd.Parameters["@InstanceSelection"].Value = Checknull(DimAttrib.Attribute.InstanceSelection);
                                    SQLcmd.Parameters["@ProcessingState"].Value = Checknull("");
                                    SQLcmd.Parameters["@AttributeHierarchyProcessingState"].Value = Checknull("");
                                    SQLcmd.Parameters["@FormatString"].Value = Checknull("");
                                    SQLcmd.Parameters["@VisualizationProperties"].Value = Checknull("");
                                    SQLcmd.Parameters["@OrderByAttribute"].Value = Checknull(DimAttrib.Attribute.OrderByAttribute);
                                    SQLcmd.Parameters["@Parent"].Value = Checknull(DimAttrib.Attribute.Parent.Name);
                                    SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(DimAttrib.Attribute.ParentDatabase.Name);
                                    SQLcmd.Parameters["@ParentServer"].Value = Checknull(DimAttrib.Attribute.ParentServer.Name);
                                    SQLcmd.Parameters["@ID"].Value = Checknull(DimAttrib.Attribute.ID);
                                    SQLcmd.Parameters["@Name"].Value = Checknull(DimAttrib.Attribute.Name);
                                    SQLcmd.Parameters["@Description"].Value = Checknull(DimAttrib.Attribute.Description);
                                    SQLcmd.Parameters["@SiteID"].Value = Checknull(DimAttrib.Attribute.SiteID);


                                    SQLcmd.ExecuteNonQuery();

                                    IncrAttributeID = Convert.ToInt32(SQLcmd.Parameters["@AttributeId"].Value);

                                    RemoveParameters();

                                    //Key Columns

                                    foreach (DataItem KeyCol in DimAttrib.Attribute.KeyColumns)
                                    {
                                        SQLcmd.CommandText = "sp_AMODBAttributeKeyColumns";
                                        SQLcmd.CommandType = CommandType.StoredProcedure;

                                        SQLcmd.Parameters.Add("@AttributeID", SqlDbType.Int);
                                        SQLcmd.Parameters.Add("@KeyColumnName", SqlDbType.NVarChar);

                                        SQLcmd.Parameters["@AttributeID"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@KeyColumnName"].Direction = ParameterDirection.Input;

                                        SQLcmd.Parameters["@AttributeID"].Value = Checknull(IncrAttributeID);
                                        SQLcmd.Parameters["@KeyColumnName"].Value = Checknull(KeyCol.Source);

                                        SQLcmd.ExecuteNonQuery();

                                        RemoveParameters();
                                    }


                                }

                                foreach (CubeAttribute DimAttrib in OLAPCubeDimension.Attributes)
                                {
                                    // Attribute Relationship
                                    foreach (AttributeRelationship Arel in DimAttrib.Attribute.AttributeRelationships)
                                    {

                                        SQLcmd.CommandText = "sp_AMODBAttributeRelationship";
                                        SQLcmd.CommandType = CommandType.StoredProcedure;

                                        SQLcmd.Parameters.Add("@CubeID", SqlDbType.Int);
                                        SQLcmd.Parameters.Add("@AttributeID", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@ParentAttributeID", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@RelationshipType", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@Cardinality", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@Optionality", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@OverrideBehavior", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@Visible", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@ParentDimension", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);

                                        SQLcmd.Parameters["@CubeID"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@AttributeID"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ParentAttributeID"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@RelationshipType"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@Cardinality"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@Optionality"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@OverrideBehavior"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@Visible"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ParentDimension"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;

                                        SQLcmd.Parameters["@CubeID"].Value = Checknull(IncrCubeID);
                                        SQLcmd.Parameters["@AttributeID"].Value = Checknull(Arel.AttributeID);
                                        SQLcmd.Parameters["@ParentAttributeID"].Value = Checknull(Arel.Parent.ID);
                                        SQLcmd.Parameters["@RelationshipType"].Value = Checknull(Arel.RelationshipType);
                                        SQLcmd.Parameters["@Cardinality"].Value = Checknull(Arel.Cardinality);
                                        SQLcmd.Parameters["@Optionality"].Value = Checknull(Arel.Optionality);
                                        SQLcmd.Parameters["@OverrideBehavior"].Value = Checknull(Arel.OverrideBehavior);
                                        SQLcmd.Parameters["@Name"].Value = Checknull(Arel.Name);
                                        SQLcmd.Parameters["@Visible"].Value = Checknull(Arel.Visible);
                                        SQLcmd.Parameters["@Parent"].Value = Checknull(Arel.Parent.Name);
                                        SQLcmd.Parameters["@ParentDimension"].Value = Checknull(Arel.ParentDimension.Name);
                                        SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(Arel.ParentDatabase.Name);
                                        SQLcmd.Parameters["@ParentServer"].Value = Checknull(Arel.ParentServer.Name);

                                        SQLcmd.ExecuteNonQuery();

                                        RemoveParameters();
                                    }

                                }

                                //Hierarchy

                                foreach (CubeHierarchy Hrarchy in OLAPCubeDimension.Hierarchies)
                                {

                                    SQLcmd.CommandText = "sp_AMODBHierarchy";
                                    SQLcmd.CommandType = CommandType.StoredProcedure;


                                    SQLcmd.Parameters.Add("@HierarchyId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@CubeDimensionId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@DisplayFolder", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AllMemberName", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@MemberNamesUnique", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@MemberKeysUnique", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AllowDuplicateNames", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ProcessingState", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@StructureType", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);

                                    SQLcmd.Parameters["@HierarchyId"].Direction = ParameterDirection.Output;
                                    SQLcmd.Parameters["@CubeDimensionId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DisplayFolder"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AllMemberName"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@MemberNamesUnique"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@MemberKeysUnique"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AllowDuplicateNames"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ProcessingState"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@StructureType"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;


                                    SQLcmd.Parameters["@CubeDimensionId"].Value = Checknull(IncrCubeDimensionID);
                                    SQLcmd.Parameters["@DisplayFolder"].Value = Checknull(Hrarchy.Hierarchy.DisplayFolder);
                                    SQLcmd.Parameters["@AllMemberName"].Value = Checknull(Hrarchy.Hierarchy.AllMemberName);
                                    SQLcmd.Parameters["@MemberNamesUnique"].Value = Checknull(Hrarchy.Hierarchy.MemberNamesUnique);
                                    SQLcmd.Parameters["@MemberKeysUnique"].Value = Checknull(Hrarchy.Hierarchy.MemberKeysUnique);
                                    SQLcmd.Parameters["@AllowDuplicateNames"].Value = Checknull(Hrarchy.Hierarchy.AllowDuplicateNames);
                                    SQLcmd.Parameters["@ProcessingState"].Value = Checknull("");
                                    SQLcmd.Parameters["@StructureType"].Value = Checknull("");
                                    SQLcmd.Parameters["@Parent"].Value = Checknull(Hrarchy.Hierarchy.Parent.Name);
                                    SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(Hrarchy.Hierarchy.ParentDatabase.Name);
                                    SQLcmd.Parameters["@ParentServer"].Value = Checknull(Hrarchy.Hierarchy.ParentServer.Name);
                                    SQLcmd.Parameters["@ID"].Value = Checknull(Hrarchy.Hierarchy.ID);
                                    SQLcmd.Parameters["@Name"].Value = Checknull(Hrarchy.Hierarchy.Name);
                                    SQLcmd.Parameters["@Description"].Value = Checknull(Hrarchy.Hierarchy.Description);
                                    SQLcmd.Parameters["@SiteID"].Value = Checknull(Hrarchy.Hierarchy.SiteID);

                                    SQLcmd.ExecuteNonQuery();

                                    IncrHierarchyID = Convert.ToInt32(SQLcmd.Parameters["@HierarchyId"].Value);

                                    RemoveParameters();


                                    //Hierarchy Levels

                                    tmphierarchylvlID = 0;
                                    foreach (Level HrarchyLvl in Hrarchy.Hierarchy.Levels)
                                    {

                                        //tmphierarchylvlID++;
                                        //SQLstr = "Insert into HierarchyLevel " +
                                        //         "(LevelId, HierarchyId, HierarchyLevel, LevelName, LevelSSASId, " +
                                        //         " HideMemberIf, SourceAttributeId ) " +
                                        //         "SELECT " + IncrLevelID.ToString() + "," +
                                        //         IncrHierarchyID.ToString() + "," +
                                        //         tmphierarchylvlID.ToString() + "," +
                                        //         "'" + lvl.Name + "'," +
                                        //         "'" + lvl.ID + "'," +
                                        //         "'" + lvl.HideMemberIf + "'," +
                                        //         "(SELECT AttributeID " +
                                        //         "  FROM DimensionAttribute " +
                                        //         " WHERE CubeDimensionID = " + IncrCubeDimensionID.ToString() +
                                        //         "   AND [Id] ='" + lvl.SourceAttributeID + "')";

                                        //ExecuteSQL(SQLstr);

                                        SQLcmd.CommandText = "sp_AMODBHierarchyLevel";
                                        SQLcmd.CommandType = CommandType.StoredProcedure;

                                        SQLcmd.Parameters.Add("@HierarchyId", SqlDbType.Int);
                                        SQLcmd.Parameters.Add("@HierarchyLevel", SqlDbType.SmallInt);
                                        SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@HideMemberIf", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@SourceAttributeId", SqlDbType.NVarChar);

                                        SQLcmd.Parameters["@HierarchyId"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@HierarchyLevel"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@HideMemberIf"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@SourceAttributeId"].Direction = ParameterDirection.Input;

                                        SQLcmd.Parameters["@HierarchyId"].Value = Checknull(IncrHierarchyID);
                                        SQLcmd.Parameters["@HierarchyLevel"].Value = Checknull(tmphierarchylvlID);
                                        SQLcmd.Parameters["@Name"].Value = Checknull(HrarchyLvl.Name);
                                        SQLcmd.Parameters["@ID"].Value = Checknull(HrarchyLvl.ID);
                                        SQLcmd.Parameters["@HideMemberIf"].Value = Checknull(HrarchyLvl.HideMemberIf);
                                        SQLcmd.Parameters["@SourceAttributeId"].Value = Checknull(HrarchyLvl.SourceAttributeID);

                                        SQLcmd.ExecuteNonQuery();

                                        RemoveParameters();
                                    }

                                }

                            }

                            //Measure Group
                            foreach (MeasureGroup MesGroup in OLAPCube.MeasureGroups)
                            {


                                SQLcmd.CommandText = "sp_AMODBMeasureGroup";
                                SQLcmd.CommandType = CommandType.StoredProcedure;

                                SQLcmd.Parameters.Add("@MeasureGroupId", SqlDbType.Int);
                                SQLcmd.Parameters.Add("@CubeId", SqlDbType.Int);
                                SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@IsLinked", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Type", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Source", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@StorageMode", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@StorageLocation", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@IgnoreUnrelatedDimensions", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@EstimatedRows", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@EstimatedSize", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ProcessingMode", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@AggregationPrefix", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ProcessingPriority", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@LastProcessed", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@State", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@IsLoaded", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@CreatedTimestamp", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@LastSchemaUpdate", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);

                                SQLcmd.Parameters["@MeasureGroupId"].Direction = ParameterDirection.Output;
                                SQLcmd.Parameters["@CubeId"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@IsLinked"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Type"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Source"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@StorageMode"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@StorageLocation"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@IgnoreUnrelatedDimensions"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@EstimatedRows"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@EstimatedSize"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ProcessingMode"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@AggregationPrefix"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ProcessingPriority"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@LastProcessed"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@State"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@IsLoaded"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@CreatedTimestamp"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@LastSchemaUpdate"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;

                                SQLcmd.Parameters["@CubeId"].Value = Checknull(IncrCubeID);
                                SQLcmd.Parameters["@ID"].Value = Checknull(MesGroup.ID);
                                SQLcmd.Parameters["@Name"].Value = Checknull(MesGroup.Name);
                                SQLcmd.Parameters["@IsLinked"].Value = Checknull(MesGroup.IsLinked);
                                SQLcmd.Parameters["@Type"].Value = Checknull(MesGroup.Type);
                                SQLcmd.Parameters["@Source"].Value = Checknull(MesGroup.Source);
                                SQLcmd.Parameters["@StorageMode"].Value = Checknull(MesGroup.StorageMode);
                                SQLcmd.Parameters["@StorageLocation"].Value = Checknull(MesGroup.StorageLocation);
                                SQLcmd.Parameters["@IgnoreUnrelatedDimensions"].Value = Checknull(MesGroup.IgnoreUnrelatedDimensions);
                                SQLcmd.Parameters["@EstimatedRows"].Value = Checknull(MesGroup.EstimatedRows);
                                SQLcmd.Parameters["@EstimatedSize"].Value = Checknull(MesGroup.EstimatedSize);
                                SQLcmd.Parameters["@ProcessingMode"].Value = Checknull(MesGroup.ProcessingMode);
                                SQLcmd.Parameters["@AggregationPrefix"].Value = Checknull(MesGroup.AggregationPrefix);
                                SQLcmd.Parameters["@ProcessingPriority"].Value = Checknull(MesGroup.ProcessingPriority);
                                SQLcmd.Parameters["@Parent"].Value = Checknull(MesGroup.Parent);
                                SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(MesGroup.ParentDatabase);
                                SQLcmd.Parameters["@ParentServer"].Value = Checknull(MesGroup.ParentServer);
                                SQLcmd.Parameters["@LastProcessed"].Value = Checknull(MesGroup.LastProcessed);
                                SQLcmd.Parameters["@State"].Value = Checknull(MesGroup.State);
                                SQLcmd.Parameters["@IsLoaded"].Value = Checknull(MesGroup.IsLoaded);
                                SQLcmd.Parameters["@CreatedTimestamp"].Value = Checknull(MesGroup.CreatedTimestamp);
                                SQLcmd.Parameters["@LastSchemaUpdate"].Value = Checknull(MesGroup.LastSchemaUpdate);
                                SQLcmd.Parameters["@Description"].Value = Checknull(MesGroup.Description);
                                SQLcmd.Parameters["@SiteID"].Value = Checknull(MesGroup.SiteID);

                                SQLcmd.ExecuteNonQuery();

                                IncrMeasureGroupID = Convert.ToInt32(SQLcmd.Parameters["@MeasureGroupId"].Value);

                                RemoveParameters();

                                // Measure Group Dimension
                                foreach (MeasureGroupDimension MesGroupDim in MesGroup.Dimensions)
                                {

                                    SQLcmd.CommandText = "sp_AMODBMeasureGroupDimension";
                                    SQLcmd.CommandType = CommandType.StoredProcedure;

                                    SQLcmd.Parameters.Add("@CubeDimensionId", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@CubeId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@MeasureGroupId", SqlDbType.Int);

                                    SQLcmd.Parameters["@CubeDimensionId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@CubeId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@MeasureGroupId"].Direction = ParameterDirection.Input;

                                    SQLcmd.Parameters["@CubeDimensionId"].Value = Checknull(MesGroupDim.CubeDimensionID);
                                    SQLcmd.Parameters["@CubeId"].Value = Checknull(IncrCubeID);
                                    SQLcmd.Parameters["@MeasureGroupId"].Value = Checknull(IncrMeasureGroupID);

                                    SQLcmd.ExecuteNonQuery();

                                    RemoveParameters();
                                }

                                // Measures
                                foreach (Measure Mesre in MesGroup.Measures)
                                {
                                    SQLcmd.CommandText = "sp_AMODBMeasure";
                                    SQLcmd.CommandType = CommandType.StoredProcedure;

                                    SQLcmd.Parameters.Add("@MeasureId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@MeasureGroupId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@IsLinked", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AggregateFunction", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@DataType", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Source", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Visible", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@DisplayFolder", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@FormatString", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@BackColor", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ForeColor", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@FontName", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@FontSize", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@FontFlags", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@MeasureExpression", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentCube", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);

                                    SQLcmd.Parameters["@MeasureId"].Direction = ParameterDirection.Output;
                                    SQLcmd.Parameters["@MeasureGroupId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@IsLinked"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AggregateFunction"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DataType"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Source"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Visible"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DisplayFolder"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@FormatString"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@BackColor"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ForeColor"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@FontName"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@FontSize"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@FontFlags"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@MeasureExpression"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentCube"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;

                                    SQLcmd.Parameters["@MeasureGroupId"].Value = Checknull(IncrMeasureGroupID);
                                    SQLcmd.Parameters["@ID"].Value = Checknull(Mesre.ID);
                                    SQLcmd.Parameters["@Name"].Value = Checknull(Mesre.Name);
                                    SQLcmd.Parameters["@IsLinked"].Value = Checknull(Mesre.IsLinked);
                                    SQLcmd.Parameters["@AggregateFunction"].Value = Checknull(Mesre.AggregateFunction);
                                    SQLcmd.Parameters["@DataType"].Value = Checknull(Mesre.DataType);
                                    SQLcmd.Parameters["@Source"].Value = Checknull(Mesre.Source);
                                    SQLcmd.Parameters["@Visible"].Value = Checknull(Mesre.Visible);
                                    SQLcmd.Parameters["@DisplayFolder"].Value = Checknull(Mesre.DisplayFolder);
                                    SQLcmd.Parameters["@FormatString"].Value = Checknull(Mesre.FormatString);
                                    SQLcmd.Parameters["@BackColor"].Value = Checknull(Mesre.BackColor);
                                    SQLcmd.Parameters["@ForeColor"].Value = Checknull(Mesre.ForeColor);
                                    SQLcmd.Parameters["@FontName"].Value = Checknull(Mesre.FontName);
                                    SQLcmd.Parameters["@FontSize"].Value = Checknull(Mesre.FontSize);
                                    SQLcmd.Parameters["@FontFlags"].Value = Checknull(Mesre.FontFlags);
                                    SQLcmd.Parameters["@MeasureExpression"].Value = Checknull(Mesre.MeasureExpression);
                                    SQLcmd.Parameters["@Parent"].Value = Checknull(Mesre.Parent);
                                    SQLcmd.Parameters["@ParentCube"].Value = Checknull(Mesre.ParentCube);
                                    SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(Mesre.ParentDatabase);
                                    SQLcmd.Parameters["@ParentServer"].Value = Checknull(Mesre.ParentServer);
                                    SQLcmd.Parameters["@Description"].Value = Checknull(Mesre.Description);
                                    SQLcmd.Parameters["@SiteID"].Value = Checknull(Mesre.SiteID);

                                    SQLcmd.ExecuteNonQuery();

                                    IncrMeasureID = Convert.ToInt32(SQLcmd.Parameters["@MeasureId"].Value);

                                    RemoveParameters();


                                }



                                foreach (AggregationDesign AggDes in MesGroup.AggregationDesigns)
                                {

                                    SQLcmd.CommandText = "sp_AMODBAggregationDesign";
                                    SQLcmd.CommandType = CommandType.StoredProcedure;

                                    SQLcmd.Parameters.Add("@AggregationDesignId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@MeasureGroupId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@EstimatedRows", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@EstimatedPerformanceGain", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentCube", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@IsLoaded", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@CreatedTimestamp", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@LastSchemaUpdate", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);

                                    SQLcmd.Parameters["@AggregationDesignId"].Direction = ParameterDirection.Output;
                                    SQLcmd.Parameters["@MeasureGroupId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@EstimatedRows"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@EstimatedPerformanceGain"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentCube"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@IsLoaded"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@CreatedTimestamp"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@LastSchemaUpdate"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;


                                    SQLcmd.Parameters["@MeasureGroupId"].Value = Checknull(IncrMeasureGroupID);
                                    SQLcmd.Parameters["@ID"].Value = Checknull(AggDes.ID);
                                    SQLcmd.Parameters["@Name"].Value = Checknull(AggDes.Name);
                                    SQLcmd.Parameters["@EstimatedRows"].Value = Checknull(AggDes.EstimatedRows);
                                    SQLcmd.Parameters["@EstimatedPerformanceGain"].Value = Checknull(AggDes.EstimatedPerformanceGain);
                                    SQLcmd.Parameters["@Parent"].Value = Checknull(AggDes.Parent);
                                    SQLcmd.Parameters["@ParentCube"].Value = Checknull(AggDes.ParentCube);
                                    SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(AggDes.ParentDatabase);
                                    SQLcmd.Parameters["@ParentServer"].Value = Checknull(AggDes.ParentServer);
                                    SQLcmd.Parameters["@IsLoaded"].Value = Checknull(AggDes.IsLoaded);
                                    SQLcmd.Parameters["@CreatedTimestamp"].Value = Checknull(AggDes.CreatedTimestamp);
                                    SQLcmd.Parameters["@LastSchemaUpdate"].Value = Checknull(AggDes.LastSchemaUpdate);
                                    SQLcmd.Parameters["@Description"].Value = Checknull(AggDes.Description);
                                    SQLcmd.Parameters["@SiteID"].Value = Checknull(AggDes.SiteID);

                                    SQLcmd.ExecuteNonQuery();

                                    IncrAggregationDesignID = Convert.ToInt32(SQLcmd.Parameters["@AggregationDesignId"].Value);

                                    RemoveParameters();



                                    foreach (Aggregation Agg in AggDes.Aggregations)
                                    {
                                        SQLcmd.CommandText = "sp_AMODBAggregation";
                                        SQLcmd.CommandType = CommandType.StoredProcedure;

                                        SQLcmd.Parameters.Add("@AggregationId", SqlDbType.Int);
                                        SQLcmd.Parameters.Add("@AggregationDesignId", SqlDbType.Int);
                                        SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@ParentMeasureGroup", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@ParentCube", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                                        SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);

                                        SQLcmd.Parameters["@AggregationId"].Direction = ParameterDirection.Output;
                                        SQLcmd.Parameters["@AggregationDesignId"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ParentMeasureGroup"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ParentCube"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                                        SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;


                                        SQLcmd.Parameters["@AggregationDesignId"].Value = Checknull(IncrAggregationDesignID);
                                        SQLcmd.Parameters["@ID"].Value = Checknull(Agg.ID);
                                        SQLcmd.Parameters["@Name"].Value = Checknull(Agg.Name);
                                        SQLcmd.Parameters["@Parent"].Value = Checknull(Agg.Parent);
                                        SQLcmd.Parameters["@ParentMeasureGroup"].Value = Checknull(Agg.ParentMeasureGroup);
                                        SQLcmd.Parameters["@ParentCube"].Value = Checknull(Agg.ParentCube);
                                        SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(Agg.ParentDatabase);
                                        SQLcmd.Parameters["@ParentServer"].Value = Checknull(Agg.ParentServer);
                                        SQLcmd.Parameters["@Description"].Value = Checknull(Agg.Description);
                                        SQLcmd.Parameters["@SiteID"].Value = Checknull(Agg.SiteID);

                                        SQLcmd.ExecuteNonQuery();

                                        IncrAggregationID = Convert.ToInt32(SQLcmd.Parameters["@AggregationId"].Value);

                                        RemoveParameters();

                                        foreach (AggregationDimension AggDim in Agg.Dimensions)
                                        {
                                            SQLcmd.CommandText = "sp_AMODBAggregationDimension";
                                            SQLcmd.CommandType = CommandType.StoredProcedure;

                                            SQLcmd.Parameters.Add("@AggregationId", SqlDbType.Int);
                                            SQLcmd.Parameters.Add("@CubeId", SqlDbType.Int);
                                            SQLcmd.Parameters.Add("@DimensionId", SqlDbType.NVarChar);

                                            SQLcmd.Parameters["@AggregationId"].Direction = ParameterDirection.Input;
                                            SQLcmd.Parameters["@CubeId"].Direction = ParameterDirection.Input;
                                            SQLcmd.Parameters["@DimensionId"].Direction = ParameterDirection.Input;

                                            SQLcmd.Parameters["@AggregationId"].Value = Checknull(IncrAggregationID);
                                            SQLcmd.Parameters["@CubeId"].Value = Checknull(IncrCubeID);
                                            SQLcmd.Parameters["@DimensionId"].Value = Checknull(AggDim.Dimension.ID);

                                            SQLcmd.ExecuteNonQuery();

                                            RemoveParameters();
                                        }

                                    }


                                }


                                //Partition
                                for (int PartitionId = 0; PartitionId <= MesGroup.Partitions.Count - 1; PartitionId++)
                                {

                                    Partition Par = MesGroup.Partitions[PartitionId];

                                    SQLcmd.CommandText = "sp_AMODBPartition";
                                    SQLcmd.CommandType = CommandType.StoredProcedure;

                                    SQLcmd.Parameters.Add("@AggregationDesignID", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AggregationInstanceSource", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@AggregationPrefix", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@CreatedTimestamp", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@CubeId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@CurrentStorageMode", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@CurrentStringStoresCompatibilityLevel", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@DatabaseId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@DataSourceId", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@DataSourceViewId", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@DirectQueryUsage", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@EstimatedRows", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@EstimatedSize", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@IsLoaded", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@LastProcessed", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@LastSchemaUpdate", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@MeasureGroupId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentCube", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@PartitionId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@ProactiveCaching", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ProcessingMode", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ProcessingPriority", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@RemoteDataSource", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@RemoteDataSourceID", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Slice", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Source", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@State", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@StorageLocation", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@StorageMode", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@StringStoresCompatibilityLevel", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Type", SqlDbType.NVarChar);

                                    SQLcmd.Parameters["@AggregationDesignID"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AggregationInstanceSource"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@AggregationPrefix"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@CreatedTimestamp"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@CubeId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@CurrentStorageMode"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@CurrentStringStoresCompatibilityLevel"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DatabaseId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DataSourceId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DataSourceViewId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@DirectQueryUsage"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@EstimatedRows"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@EstimatedSize"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@IsLoaded"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@LastProcessed"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@LastSchemaUpdate"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@MeasureGroupId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentCube"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@PartitionId"].Direction = ParameterDirection.Output;
                                    SQLcmd.Parameters["@ProactiveCaching"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ProcessingMode"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ProcessingPriority"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@RemoteDataSource"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@RemoteDataSourceID"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Slice"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Source"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@State"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@StorageLocation"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@StorageMode"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@StringStoresCompatibilityLevel"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Type"].Direction = ParameterDirection.Input;

                                    SQLcmd.Parameters["@AggregationDesignID"].Value = Checknull(Par.AggregationDesignID);
                                    SQLcmd.Parameters["@AggregationInstanceSource"].Value = Checknull(Par.AggregationInstanceSource);
                                    SQLcmd.Parameters["@AggregationPrefix"].Value = Checknull(Par.AggregationPrefix);
                                    SQLcmd.Parameters["@CreatedTimestamp"].Value = Checknull(Par.CreatedTimestamp);
                                    SQLcmd.Parameters["@CubeId"].Value = Checknull(IncrCubeID);
                                    SQLcmd.Parameters["@CurrentStorageMode"].Value = Checknull(Par.CurrentStorageMode);
                                    SQLcmd.Parameters["@CurrentStringStoresCompatibilityLevel"].Value = Checknull("");
                                    SQLcmd.Parameters["@DatabaseId"].Value = Checknull(IncrDatabaseID);
                                    SQLcmd.Parameters["@DataSourceId"].Value = Checknull(Par.DataSource.ID);
                                    if (Par.DataSourceView == null)
                                    {
                                        SQLcmd.Parameters["@DataSourceViewId"].Value = "";
                                    }
                                    else
                                    {
                                        SQLcmd.Parameters["@DataSourceViewId"].Value = Checknull(Par.DataSourceView.ID);
                                    }
                                    SQLcmd.Parameters["@Description"].Value = Checknull(Par.Description);
                                    SQLcmd.Parameters["@DirectQueryUsage"].Value = Checknull("");
                                    SQLcmd.Parameters["@EstimatedRows"].Value = Checknull(Par.EstimatedRows);
                                    SQLcmd.Parameters["@EstimatedSize"].Value = Checknull(Par.EstimatedSize);
                                    SQLcmd.Parameters["@ID"].Value = Checknull(Par.ID);
                                    SQLcmd.Parameters["@IsLoaded"].Value = Checknull(Par.IsLoaded);
                                    SQLcmd.Parameters["@LastProcessed"].Value = Checknull(Par.LastProcessed);
                                    SQLcmd.Parameters["@LastSchemaUpdate"].Value = Checknull(Par.LastSchemaUpdate);
                                    SQLcmd.Parameters["@MeasureGroupId"].Value = Checknull(IncrMeasureGroupID);
                                    SQLcmd.Parameters["@Name"].Value = Checknull(Par.Name);
                                    SQLcmd.Parameters["@Parent"].Value = Checknull(Par.Parent);
                                    SQLcmd.Parameters["@ParentCube"].Value = Checknull(Par.ParentCube);
                                    SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(Par.ParentDatabase);
                                    SQLcmd.Parameters["@ParentServer"].Value = Checknull(Par.ParentServer);
                                    SQLcmd.Parameters["@ProactiveCaching"].Value = Checknull(Par.ProactiveCaching);
                                    SQLcmd.Parameters["@ProcessingMode"].Value = Checknull(Par.ProcessingMode);
                                    SQLcmd.Parameters["@ProcessingPriority"].Value = Checknull(Par.ProcessingPriority);
                                    SQLcmd.Parameters["@RemoteDataSource"].Value = Checknull(Par.RemoteDataSource);
                                    SQLcmd.Parameters["@RemoteDataSourceID"].Value = Checknull(Par.RemoteDataSourceID);
                                    SQLcmd.Parameters["@SiteID"].Value = Checknull(Par.SiteID);
                                    SQLcmd.Parameters["@Slice"].Value = Checknull(Par.Slice);
                                    SQLcmd.Parameters["@Source"].Value = Checknull(Par.Source);
                                    SQLcmd.Parameters["@State"].Value = Checknull(Par.State);
                                    SQLcmd.Parameters["@StorageLocation"].Value = Checknull(Par.StorageLocation);
                                    SQLcmd.Parameters["@StorageMode"].Value = Checknull(Par.StorageMode);
                                    SQLcmd.Parameters["@StringStoresCompatibilityLevel"].Value = Checknull("");
                                    SQLcmd.Parameters["@Type"].Value = Checknull(Par.Type);

                                    SQLcmd.ExecuteNonQuery();

                                    IncrPartitionID = Convert.ToInt32(SQLcmd.Parameters["@PartitionId"].Value);

                                    RemoveParameters();

                                    SQLcmd.CommandText = "sp_AMODBProactiveCaching";
                                    SQLcmd.CommandType = CommandType.StoredProcedure;

                                    SQLcmd.Parameters.Add("@AggregationStorage", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Enabled", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@ForceRebuildInterval", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Latency", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@OnlineMode", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@PartitionId", SqlDbType.Int);
                                    SQLcmd.Parameters.Add("@SilenceInterval", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@SilenceOverrideInterval", SqlDbType.NVarChar);
                                    SQLcmd.Parameters.Add("@Source", SqlDbType.NVarChar);

                                    SQLcmd.Parameters["@AggregationStorage"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Enabled"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@ForceRebuildInterval"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Latency"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@OnlineMode"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@PartitionId"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@SilenceInterval"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@SilenceOverrideInterval"].Direction = ParameterDirection.Input;
                                    SQLcmd.Parameters["@Source"].Direction = ParameterDirection.Input;

                                    SQLcmd.Parameters["@AggregationStorage"].Value = Checknull(Par.ProactiveCaching.AggregationStorage);
                                    SQLcmd.Parameters["@Enabled"].Value = Checknull(Par.ProactiveCaching.Enabled);
                                    SQLcmd.Parameters["@ForceRebuildInterval"].Value = Checknull(Par.ProactiveCaching.ForceRebuildInterval);
                                    SQLcmd.Parameters["@Latency"].Value = Checknull(Par.ProactiveCaching.Latency);
                                    SQLcmd.Parameters["@OnlineMode"].Value = Checknull(Par.ProactiveCaching.OnlineMode);
                                    SQLcmd.Parameters["@PartitionId"].Value = Checknull(IncrPartitionID);
                                    SQLcmd.Parameters["@SilenceInterval"].Value = Checknull(Par.ProactiveCaching.SilenceInterval);
                                    SQLcmd.Parameters["@SilenceOverrideInterval"].Value = Checknull(Par.ProactiveCaching.SilenceOverrideInterval);
                                    SQLcmd.Parameters["@Source"].Value = Checknull(Par.ProactiveCaching.Source);

                                    SQLcmd.ExecuteNonQuery();

                                    RemoveParameters();

                                }




                            }

                            // KPI
                            foreach (Kpi cKpi in OLAPCube.Kpis)
                            {

                                SQLcmd.CommandText = "sp_AMODBKPI";
                                SQLcmd.CommandType = CommandType.StoredProcedure;

                                SQLcmd.Parameters.Add("@AssociatedMeasureGroupID", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@CubeId", SqlDbType.Int);
                                SQLcmd.Parameters.Add("@CurrentTimeMember", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Description", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@DisplayFolder", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Goal", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ID", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Name", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Parent", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ParentDatabase", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ParentKpiID", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@ParentServer", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@SiteID", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Status", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@StatusGraphic", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Trend", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@TrendGraphic", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Value", SqlDbType.NVarChar);
                                SQLcmd.Parameters.Add("@Weight", SqlDbType.NVarChar);

                                SQLcmd.Parameters["@AssociatedMeasureGroupID"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@CubeId"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@CurrentTimeMember"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Description"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@DisplayFolder"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Goal"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ID"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Name"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Parent"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ParentDatabase"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ParentKpiID"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@ParentServer"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@SiteID"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Status"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@StatusGraphic"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Trend"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@TrendGraphic"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Value"].Direction = ParameterDirection.Input;
                                SQLcmd.Parameters["@Weight"].Direction = ParameterDirection.Input;

                                SQLcmd.Parameters["@AssociatedMeasureGroupID"].Value = Checknull(cKpi.AssociatedMeasureGroupID);
                                SQLcmd.Parameters["@CubeId"].Value = Checknull(IncrCubeID);
                                SQLcmd.Parameters["@CurrentTimeMember"].Value = Checknull(cKpi.CurrentTimeMember);
                                SQLcmd.Parameters["@Description"].Value = Checknull(cKpi.Description);
                                SQLcmd.Parameters["@DisplayFolder"].Value = Checknull(cKpi.DisplayFolder);
                                SQLcmd.Parameters["@Goal"].Value = Checknull(cKpi.Goal);
                                SQLcmd.Parameters["@ID"].Value = Checknull(cKpi.ID);
                                SQLcmd.Parameters["@Name"].Value = Checknull(cKpi.Name);
                                SQLcmd.Parameters["@Parent"].Value = Checknull(cKpi.Parent);
                                SQLcmd.Parameters["@ParentDatabase"].Value = Checknull(cKpi.ParentDatabase);
                                SQLcmd.Parameters["@ParentKpiID"].Value = Checknull(cKpi.ParentKpiID);
                                SQLcmd.Parameters["@ParentServer"].Value = Checknull(cKpi.ParentServer);
                                SQLcmd.Parameters["@SiteID"].Value = Checknull(cKpi.SiteID);
                                SQLcmd.Parameters["@Status"].Value = Checknull(cKpi.Status);
                                SQLcmd.Parameters["@StatusGraphic"].Value = Checknull(cKpi.StatusGraphic);
                                SQLcmd.Parameters["@Trend"].Value = Checknull(cKpi.Trend);
                                SQLcmd.Parameters["@TrendGraphic"].Value = Checknull(cKpi.TrendGraphic);
                                SQLcmd.Parameters["@Value"].Value = Checknull(cKpi.Value);
                                SQLcmd.Parameters["@Weight"].Value = Checknull(cKpi.Weight);

                                SQLcmd.ExecuteNonQuery();

                                RemoveParameters();

                            }


                        }

                    }
                }

            }

            // TODO: Add your code here
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private void ExecuteSQL(String SQL)
        {
            SQLcmd.CommandType = CommandType.Text;
            SQLcmd.CommandText = SQL;
            SQLcmd.ExecuteNonQuery();
        }

        public void RemoveParameters()
        {
            for (int p = SQLcmd.Parameters.Count - 1; p >= 0; p--)
            {
                SQLcmd.Parameters.Remove(SQLcmd.Parameters[p]);
            }
        }

        public string Checknull(Object obj)
        {
            if (obj == null)
            {
                return ("");
            }
            else
            {
                return (obj.ToString());
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_d283575e8ba349dd97aa9f085feeaa38</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_d283575e8ba349dd97aa9f085feeaa38</msb:DisplayName>
		<msb:ProjectId>{57E28870-1B35-4AC6-B128-5507FB2FFF70}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_d283575e8ba349dd97aa9f085feeaa38.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="de1463604359467d821507eae2339a7d">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>61</msb:LineNumber>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d283575e8ba349dd97aa9f085feeaa38.csproj.Properties.Settings.get_Default():ST_d283575e8ba349dd97aa9f085feeaa38.csproj.Properties.Sett" +
    "ings")]

namespace ST_d283575e8ba349dd97aa9f085feeaa38.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d283575e8ba349dd97aa9f085feeaa38.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Hewlett-Packard")]
[assembly: AssemblyProduct("ST_d283575e8ba349dd97aa9f085feeaa38.csproj")]
[assembly: AssemblyCopyright("Copyright @ Hewlett-Packard 2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d283575e8ba349dd97aa9f085feeaa38.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d283575e8ba349dd97aa9f085feeaa38.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d283575e8ba349dd97aa9f085feeaa38.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d283575e8ba349dd97aa9f085feeaa38.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d283575e8ba349dd97aa9f085feeaa38.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d283575e8ba349dd97aa9f085feeaa38.csproj.dll">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
AQBwbyIAAAoYbyMAAAoCewIAAARvIAAACnIHAgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnIPAgBw
byIAAAoXbyMAAAoCewIAAARvIAAACnIbAgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnI/AgBwbyIA
AAoXbyMAAAoCewIAAARvIAAACnJfAgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJ1AgBwbyIAAAoX
byMAAAoCewIAAARvIAAACnKNAgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnKlAgBwbyIAAAoXbyMA
AAoCewIAAARvIAAACnK7AgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnLXAgBwbyIAAAoXbyMAAAoC
ewIAAARvIAAACnLpAgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnL7AgBwbyIAAAoXbyMAAAoCewIA
AARvIAAACnIRAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnItAwBwbyIAAAoXbyMAAAoCewIAAARv
IAAACnJHAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJfAwBwbyIAAAoXbyMAAAoCewIAAARvIAAA
CnJzAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnKXAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnK7
AwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnLVAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnLlAwBw
byIAAAoXbyMAAAoCewIAAARvIAAACnIHAgBwbyIAAAoCEQdvJgAACigEAAAGbyQAAAoCewIAAARv
IAAACnIPAgBwbyIAAAoCEQdvJwAACigEAAAGbyQAAAoCewIAAARvIAAACnIbAgBwbyIAAAoCEQdv
KAAACigEAAAGbyQAAAoCewIAAARvIAAACnI/AgBwbyIAAAoCEQdvKQAACigEAAAGbyQAAAoCewIA
AARvIAAACnJfAgBwbyIAAAoCEQdvKgAACigEAAAGbyQAAAoCewIAAARvIAAACnJ1AgBwbyIAAAoC
EQdvKwAACow/AAABKAQAAAZvJAAACgJ7AgAABG8gAAAKco0CAHBvIgAACgIRB28sAAAKKAQAAAZv
JAAACgJ7AgAABG8gAAAKcqUCAHBvIgAACgIRB28tAAAKjD8AAAEoBAAABm8kAAAKAnsCAAAEbyAA
AApyuwIAcG8iAAAKAhEHby4AAAooBAAABm8kAAAKAnsCAAAEbyAAAApy1wIAcG8iAAAKAhEHby8A
AAooBAAABm8kAAAKAnsCAAAEbyAAAApy6QIAcG8iAAAKAhEHbzAAAAqMQgAAASgEAAAGbyQAAAoC
ewIAAARvIAAACnL7AgBwbyIAAAoCEQdvMQAACoxDAAABKAQAAAZvJAAACgJ7AgAABG8gAAAKchED
AHBvIgAACgIRB28yAAAKKAQAAAZvJAAACgJ7AgAABG8gAAAKci0DAHBvIgAACgIRB28zAAAKKAQA
AAZvJAAACgJ7AgAABG8gAAAKckcDAHBvIgAACgJyAQAAcCgEAAAGbyQAAAoCewIAAARvIAAACnJf
AwBwbyIAAAoCEQdvNAAACow/AAABKAQAAAZvJAAACgJ7AgAABG8gAAAKcnMDAHBvIgAACgIRB281
AAAKjEUAAAEoBAAABm8kAAAKAnsCAAAEbyAAAApylwMAcG8iAAAKAhEHbzYAAAqMRQAAASgEAAAG
byQAAAoCewIAAARvIAAACnK7AwBwbyIAAAoCEQdvNwAACigEAAAGbyQAAAoCewIAAARvIAAACnLV
AwBwbyIAAAoCEQdvOAAACigEAAAGbyQAAAoCewIAAARvIAAACnLlAwBwbyIAAAoCEQdvOQAACigE
AAAGbyQAAAoCewIAAARvJQAACiYCewIAAARvIAAACnLzAQBwbyIAAApvOgAACig7AAAKEwgCKAMA
AAYRB288AAAKbz0AAAoTFDgnjAAAERRvPgAACnQTAAABExUJcgEAAHAoPwAACi0SERVvJwAACgko
PwAACjn6iwAAAnsCAAAEcvUDAHBvHgAACgJ7AgAABBpvHwAACgJ7AgAABG8gAAAKchkEAHAebyEA
AAomAnsCAAAEbyAAAApy8wEAcB5vIQAACiYCewIAAARvIAAACnIxBABwHwxvIQAACiYCewIAAARv
IAAACnJJBABwHwxvIQAACiYCewIAAARvIAAACnJvBABwHwxvIQAACiYCewIAAARvIAAACnKXBABw
HwxvIQAACiYCewIAAARvIAAACnK1BABwHwxvIQAACiYCewIAAARvIAAACnLHBABwHwxvIQAACiYC
ewIAAARvIAAACnLbBABwHwxvIQAACiYCewIAAARvIAAACnLxBABwHwxvIQAACiYCewIAAARvIAAA
CnIZBQBwHwxvIQAACiYCewIAAARvIAAACnI3BQBwHwxvIQAACiYCewIAAARvIAAACnJdBQBwHwxv
IQAACiYCewIAAARvIAAACnJzBQBwHwxvIQAACiYCewIAAARvIAAACnKRBQBwHwxvIQAACiYCewIA
AARvIAAACnKtBQBwHwxvIQAACiYCewIAAARvIAAACnLBBQBwHwxvIQAACiYCewIAAARvIAAACnLn
BQBwHwxvIQAACiYCewIAAARvIAAACnIPBgBwHwxvIQAACiYCewIAAARvIAAACnLlAwBwHwxvIQAA
CiYCewIAAARvIAAACnIxBgBwHwxvIQAACiYCewIAAARvIAAACnJPBgBwHwxvIQAACiYCewIAAARv
IAAACnJfAwBwHwxvIQAACiYCewIAAARvIAAACnJzAwBwHwxvIQAACiYCewIAAARvIAAACnKXAwBw
HwxvIQAACiYCewIAAARvIAAACnK7AwBwHwxvIQAACiYCewIAAARvIAAACnIHAgBwHwxvIQAACiYC
ewIAAARvIAAACnIPAgBwHwxvIQAACiYCewIAAARvIAAACnLVAwBwHwxvIQAACiYCewIAAARvIAAA
CnIZBABwbyIAAAoYbyMAAAoCewIAAARvIAAACnLzAQBwbyIAAAoXbyMAAAoCewIAAARvIAAACnIx
BABwbyIAAAoXbyMAAAoCewIAAARvIAAACnJJBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnJvBABw
byIAAAoXbyMAAAoCewIAAARvIAAACnKXBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnK1BABwbyIA
AAoXbyMAAAoCewIAAARvIAAACnLHBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnLbBABwbyIAAAoX
byMAAAoCewIAAARvIAAACnLxBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnIZBQBwbyIAAAoXbyMA
AAoCewIAAARvIAAACnI3BQBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJdBQBwbyIAAAoXbyMAAAoC
ewIAAARvIAAACnJzBQBwbyIAAAoXbyMAAAoCewIAAARvIAAACnKRBQBwbyIAAAoXbyMAAAoCewIA
AARvIAAACnKtBQBwbyIAAAoXbyMAAAoCewIAAARvIAAACnLBBQBwbyIAAAoXbyMAAAoCewIAAARv
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
ERdvVAAACigEAAAGbyQAAAoCewIAAARvIAAACnJJBwBwbyIAAAoCERdvVQAACigEAAAGbyQAAAoC
ewIAAARvIAAACnJfAwBwbyIAAAoCERdvNAAACow/AAABKAQAAAZvJAAACgJ7AgAABG8gAAAKcnMD
AHBvIgAACgIRF281AAAKjEUAAAEoBAAABm8kAAAKAnsCAAAEbyAAAApylwMAcG8iAAAKAhEXbzYA
AAqMRQAAASgEAAAGbyQAAAoCewIAAARvIAAACnK7AwBwbyIAAAoCERdvNwAACigEAAAGbyQAAAoC
ewIAAARvIAAACnIHAgBwbyIAAAoCERdvJgAACigEAAAGbyQAAAoCewIAAARvIAAACnIPAgBwbyIA
AAoCERdvJwAACigEAAAGbyQAAAoCewIAAARvIAAACnLVAwBwbyIAAAoCERdvOAAACigEAAAGbyQA
AAoCewIAAARvJQAACiYCewIAAARvIAAACnKDBgBwbyIAAApvOgAACig7AAAKJgIoAwAABhEWb1YA
AAo6pPn//94VERZ1FQAAARMYERgsBxEYb1cAAArcERVvWAAACm89AAAKExY4OxAAABEWbz4AAAp0
FgAAARMZAnsCAAAEcmUHAHBvHgAACgJ7AgAABBpvHwAACgJ7AgAABG8gAAAKcpMHAHAebyEAAAom
AnsCAAAEbyAAAApytwcAcB8MbyEAAAomAnsCAAAEbyAAAApyGQQAcB5vIQAACiYCewIAAARvIAAA
CnLXBwBwHwxvIQAACiYCewIAAARvIAAACnLlAwBwHwxvIQAACiYCewIAAARvIAAACnJJBwBwHwxv
IQAACiYCewIAAARvIAAACnJfAwBwHwxvIQAACiYCewIAAARvIAAACnJzAwBwHwxvIQAACiYCewIA
AARvIAAACnKXAwBwHwxvIQAACiYCewIAAARvIAAACnK7AwBwHwxvIQAACiYCewIAAARvIAAACnIH
AgBwHwxvIQAACiYCewIAAARvIAAACnIPAgBwHwxvIQAACiYCewIAAARvIAAACnLVAwBwHwxvIQAA
CiYCewIAAARvIAAACnKTBwBwbyIAAAoYbyMAAAoCewIAAARvIAAACnK3BwBwbyIAAAoXbyMAAAoC
ewIAAARvIAAACnIZBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnLXBwBwbyIAAAoXbyMAAAoCewIA
AARvIAAACnLlAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJJBwBwbyIAAAoXbyMAAAoCewIAAARv
IAAACnJfAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJzAwBwbyIAAAoXbyMAAAoCewIAAARvIAAA
CnKXAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnK7AwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnIH
AgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnIPAgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnLVAwBw
byIAAAoXbyMAAAoCewIAAARvIAAACnK3BwBwbyIAAAoCERlvWQAACigEAAAGbyQAAAoCewIAAARv
IAAACnIZBABwbyIAAAoCEQmMSwAAASgEAAAGbyQAAAoCewIAAARvIAAACnLXBwBwbyIAAAoCERlv
WgAACigEAAAGbyQAAAoCewIAAARvIAAACnLlAwBwbyIAAAoCERlvWwAACigEAAAGbyQAAAoCewIA
AARvIAAACnJJBwBwbyIAAAoCERlvXAAACigEAAAGbyQAAAoCewIAAARvIAAACnJfAwBwbyIAAAoC
ERlvNAAACow/AAABKAQAAAZvJAAACgJ7AgAABG8gAAAKcnMDAHBvIgAACgIRGW81AAAKjEUAAAEo
BAAABm8kAAAKAnsCAAAEbyAAAApylwMAcG8iAAAKAhEZbzYAAAqMRQAAASgEAAAGbyQAAAoCewIA
AARvIAAACnK7AwBwbyIAAAoCERlvNwAACigEAAAGbyQAAAoCewIAAARvIAAACnIHAgBwbyIAAAoC
ERlvJgAACigEAAAGbyQAAAoCewIAAARvIAAACnIPAgBwbyIAAAoCERlvJwAACigEAAAGbyQAAAoC
ewIAAARvIAAACnLVAwBwbyIAAAoCERlvOAAACigEAAAGbyQAAAoCewIAAARvJQAACiYCewIAAARv
IAAACnKTBwBwbyIAAApvOgAACig7AAAKEwoCKAMAAAYWExo4RAsAABYTHDiMCgAAAnsCAAAEcucH
AHBvHgAACgJ7AgAABBpvHwAACgJ7AgAABG8gAAAKcpMHAHAebyEAAAomAnsCAAAEbyAAAApyLQgA
cB8MbyEAAAomAnsCAAAEbyAAAApyRwgAcB8MbyEAAAomAnsCAAAEbyAAAApyZQgAcB8MbyEAAAom
AnsCAAAEbyAAAApyiwgAcB8MbyEAAAomAnsCAAAEbyAAAApysQgAcB8MbyEAAAomAnsCAAAEbyAA
AApywwgAcB8MbyEAAAomAnsCAAAEbyAAAApy2wgAcB8MbyEAAAomAnsCAAAEbyAAAApy6wgAcB8M
byEAAAomAnsCAAAEbyAAAApy/wgAcB8MbyEAAAomAnsCAAAEbyAAAApyGwkAcB8MbyEAAAomAnsC
AAAEbyAAAApyNwkAcB8MbyEAAAomAnsCAAAEbyAAAApyTwkAcB8MbyEAAAomAnsCAAAEbyAAAApy
ZQkAcB8MbyEAAAomAnsCAAAEbyAAAApyewkAcB8MbyEAAAomAnsCAAAEbyAAAApyjQkAcB8MbyEA
AAomAnsCAAAEbyAAAApyoQkAcB8MbyEAAAomAnsCAAAEbyAAAApyrwkAcB8MbyEAAAomAnsCAAAE
byAAAApyvwkAcB8MbyEAAAomAnsCAAAEbyAAAApy3QkAcB8MbyEAAAomAnsCAAAEbyAAAApy6QkA
cB8MbyEAAAomAnsCAAAEbyAAAApy/wkAcB8MbyEAAAomAnsCAAAEbyAAAApykwcAcG8iAAAKF28j
AAAKAnsCAAAEbyAAAApyLQgAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApyRwgAcG8iAAAKF28jAAAK
AnsCAAAEbyAAAApyZQgAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApyiwgAcG8iAAAKF28jAAAKAnsC
AAAEbyAAAApysQgAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApywwgAcG8iAAAKF28jAAAKAnsCAAAE
byAAAApy2wgAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApy6wgAcG8iAAAKF28jAAAKAnsCAAAEbyAA
AApy/wgAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApyGwkAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApy
NwkAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApyTwkAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApyZQkA
cG8iAAAKF28jAAAKAnsCAAAEbyAAAApyewkAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApyjQkAcG8i
AAAKF28jAAAKAnsCAAAEbyAAAApyoQkAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApyrwkAcG8iAAAK
F28jAAAKAnsCAAAEbyAAAApyvwkAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApy3QkAcG8iAAAKF28j
AAAKAnsCAAAEbyAAAApy6QkAcG8iAAAKF28jAAAKAnsCAAAEbyAAAApy/wkAcG8iAAAKF28jAAAK
AnsCAAAEbyAAAApykwcAcG8iAAAKAhEKjEsAAAEoBAAABm8kAAAKAnsCAAAEbyAAAApyLQgAcG8i
AAAKAhEZb1oAAApvXQAAChEab14AAApvXwAAChEcb2AAAApvYQAACow/AAABKAQAAAZvJAAACgJ7
AgAABG8gAAAKckcIAHBvIgAACgIRGW9aAAAKb10AAAoRGm9eAAAKb18AAAoRHG9gAAAKb2IAAAqM
PwAAASgEAAAGbyQAAAoCewIAAARvIAAACnJlCABwbyIAAAoCERlvWgAACm9dAAAKERpvXgAACm9f
AAAKERxvYAAACm9jAAAKjEMAAAEoBAAABm8kAAAKAnsCAAAEbyAAAApyiwgAcG8iAAAKAhEZb1oA
AApvXQAAChEab14AAApvXwAAChEcb2AAAApvZAAACoxDAAABKAQAAAZvJAAACgJ7AgAABG8gAAAK
crEIAHBvIgAACgIRGW9aAAAKb10AAAoRGm9eAAAKb18AAAoRHG9gAAAKb2UAAAooBAAABm8kAAAK
AnsCAAAEbyAAAApywwgAcG8iAAAKAhEZb1oAAApvXQAAChEab14AAApvXwAAChEcb2AAAApvZgAA
CigEAAAGbyQAAAoCewIAAARvIAAACnLbCABwbyIAAAoCERlvWgAACm9dAAAKERpvXgAACm9fAAAK
ERxvYAAACm9nAAAKKAQAAAZvJAAACgJ7AgAABG8gAAAKcusIAHBvIgAACgIRGW9aAAAKb10AAAoR
Gm9eAAAKb18AAAoRHG9gAAAKb2gAAAooBAAABm8kAAAKAnsCAAAEbyAAAApy/wgAcG8iAAAKAhEZ
b1oAAApvXQAAChEab14AAApvXwAAChEcb2AAAApvaQAACoxaAAABKAQAAAZvJAAACgJ7AgAABG8g
AAAKchsJAHBvIgAACgIRGW9aAAAKb10AAAoRGm9eAAAKb18AAAoRHG9gAAAKb2oAAAooBAAABm8k
AAAKAnsCAAAEbyAAAApyNwkAcG8iAAAKAhEZb1oAAApvXQAAChEab14AAApvXwAAChEcb2AAAApv
awAACigEAAAGbyQAAAoCewIAAARvIAAACnJPCQBwbyIAAAoCERlvWgAACm9dAAAKERpvXgAACm9f
AAAKERxvYAAACm9sAAAKjEsAAAEoBAAABm8kAAAKAnsCAAAEbyAAAApyZQkAcG8iAAAKAhEZb1oA
AApvXQAAChEab14AAApvXwAAChEcb2AAAApvbQAACigEAAAGbyQAAAoCewIAAARvIAAACnJ7CQBw
byIAAAoCERlvWgAACm9dAAAKERpvXgAACm9fAAAKERxvYAAACm9uAAAKjEsAAAEoBAAABm8kAAAK
AnsCAAAEbyAAAApyjQkAcG8iAAAKAhEZb1oAAApvXQAAChEab14AAApvXwAAChEcb2AAAApvbwAA
Cow/AAABKAQAAAZvJAAACgJ7AgAABG8gAAAKcqEJAHBvIgAACgIRGW9aAAAKb10AAAoRGm9eAAAK
b18AAAoRHG9gAAAKb3AAAApvcQAACigEAAAGbyQAAAoCewIAAARvIAAACnKvCQBwbyIAAAoCERlv
WgAACm9dAAAKERpvXgAACm9fAAAKERxvYAAACm9yAAAKjD8AAAEoBAAABm8kAAAKAnsCAAAEbyAA
AApyvwkAcG8iAAAKAhEZb1oAAApvXQAAChEab14AAApvXwAAChEcb2AAAApvcwAACoxbAAABKAQA
AAZvJAAACgJ7AgAABG8gAAAKct0JAHBvIgAACgIRGW9aAAAKb10AAAoRGm9eAAAKb18AAAoRHG9g
AAAKb3QAAAooBAAABm8kAAAKAnsCAAAEbyAAAApy6QkAcG8iAAAKAhEZb1oAAApvXQAAChEab14A
AApvXwAAChEcb2AAAApvdQAACigEAAAGbyQAAAoCewIAAARvIAAACnL/CQBwbyIAAAoCERlvWgAA
Cm9dAAAKERpvXgAACm9fAAAKERxvYAAACm92AAAKjD8AAAEoBAAABm8kAAAKAnsCAAAEbyUAAAom
AigDAAAGERwXWBMcERwRGW9aAAAKb10AAAoRGm9eAAAKb18AAApvdwAAChdZPk71//8RGW9aAAAK
b10AAAoRGm9eAAAKb3gAAAoTGxYTHStZG40zAAABJRZyFwoAcKIlFxEZb1oAAApvXQAAChEab14A
AApvcQAACqIlGHKsCgBwoiUZERsRHZpvZgAACqIlGnLcCgBwoigZAAAKCwIHKAIAAAYRHRdYEx0R
HREbFm95AAAKMZsRGhdYExoRGhEZb1oAAApvXQAACm93AAAKF1k+ovT//xEWb1YAAAo6ue///94V
ERZ1FQAAARMYERgsBxEYb1cAAArcERVvegAACm89AAAKExY4UmoAABEWbz4AAAp0GAAAARMeEQRy
AQAAcCg/AAAKLRMRHm8nAAAKEQQoPwAACjkjagAAAnsCAAAEcuAKAHBvHgAACgJ7AgAABBpvHwAA
CgJ7AgAABG8gAAAKcvoKAHAebyEAAAomAnsCAAAEbyAAAApyGQQAcB5vIQAACiYCewIAAARvIAAA
CnKDBgBwHwxvIQAACiYCewIAAARvIAAACnKTBwBwHwxvIQAACiYCewIAAARvIAAACnIKCwBwHwxv
IQAACiYCewIAAARvIAAACnLHBABwHwxvIQAACiYCewIAAARvIAAACnLbBABwHwxvIQAACiYCewIA
AARvIAAACnIuCwBwHwxvIQAACiYCewIAAARvIAAACnK1BABwHwxvIQAACiYCewIAAARvIAAACnJO
CwBwHwxvIQAACiYCewIAAARvIAAACnJeCwBwHwxvIQAACiYCewIAAARvIAAACnJJBABwHwxvIQAA
CiYCewIAAARvIAAACnJvBABwHwxvIQAACiYCewIAAARvIAAACnJ2CwBwHwxvIQAACiYCewIAAARv
IAAACnKQCwBwHwxvIQAACiYCewIAAARvIAAACnKwCwBwHwxvIQAACiYCewIAAARvIAAACnLSCwBw
HwxvIQAACiYCewIAAARvIAAACnLwCwBwHwxvIQAACiYCewIAAARvIAAACnImDABwHwxvIQAACiYC
ewIAAARvIAAACnJYDABwHwxvIQAACiYCewIAAARvIAAACnLlAwBwHwxvIQAACiYCewIAAARvIAAA
CnJJBwBwHwxvIQAACiYCewIAAARvIAAACnIxBgBwHwxvIQAACiYCewIAAARvIAAACnJPBgBwHwxv
IQAACiYCewIAAARvIAAACnJfAwBwHwxvIQAACiYCewIAAARvIAAACnJzAwBwHwxvIQAACiYCewIA
AARvIAAACnKXAwBwHwxvIQAACiYCewIAAARvIAAACnK7AwBwHwxvIQAACiYCewIAAARvIAAACnIH
AgBwHwxvIQAACiYCewIAAARvIAAACnIPAgBwHwxvIQAACiYCewIAAARvIAAACnLVAwBwHwxvIQAA
CiYCewIAAARvIAAACnLpCQBwHwxvIQAACiYCewIAAARvIAAACnL6CgBwbyIAAAoYbyMAAAoCewIA
AARvIAAACnIZBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnKDBgBwbyIAAAoXbyMAAAoCewIAAARv
IAAACnKTBwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnIKCwBwbyIAAAoXbyMAAAoCewIAAARvIAAA
CnLHBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnLbBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnIu
CwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnK1BABwbyIAAAoXbyMAAAoCewIAAARvIAAACnJOCwBw
byIAAAoXbyMAAAoCewIAAARvIAAACnJeCwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJJBABwbyIA
AAoXbyMAAAoCewIAAARvIAAACnJvBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnJ2CwBwbyIAAAoX
byMAAAoCewIAAARvIAAACnKQCwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnKwCwBwbyIAAAoXbyMA
AAoCewIAAARvIAAACnLSCwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnLwCwBwbyIAAAoXbyMAAAoC
ewIAAARvIAAACnImDABwbyIAAAoXbyMAAAoCewIAAARvIAAACnJYDABwbyIAAAoXbyMAAAoCewIA
AARvIAAACnLlAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJJBwBwbyIAAAoXbyMAAAoCewIAAARv
IAAACnIxBgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJPBgBwbyIAAAoXbyMAAAoCewIAAARvIAAA
CnJfAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJzAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnKX
AwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnK7AwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnIHAgBw
byIAAAoXbyMAAAoCewIAAARvIAAACnIPAgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnLVAwBwbyIA
AAoXbyMAAAoCewIAAARvIAAACnLpCQBwbyIAAAoXbyMAAAoCewIAAARvIAAACnIZBABwbyIAAAoC
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
AAqMdgAAASgEAAAGbyQAAAoCewIAAARvIAAACnK4DgBwbyIAAAoCESJvnQAACm+mAAAKjHcAAAEo
BAAABm8kAAAKAnsCAAAEbyAAAApyyg4AcG8iAAAKAhEib50AAApvpwAACigEAAAGbyQAAAoCewIA
AARvIAAACnLoDgBwbyIAAAoCESJvnQAACm+oAAAKKAQAAAZvJAAACgJ7AgAABG8gAAAKchAPAHBv
IgAACgICESJvnQAACm+pAAAKKAQAAAYoBAAABm8kAAAKAnsCAAAEbyAAAApyOg8AcG8iAAAKAhEi
b50AAApvqgAACigEAAAGbyQAAAoCewIAAARvIAAACnJaDwBwbyIAAAoCcgEAAHAoBAAABm8kAAAK
AnsCAAAEbyAAAApykg8AcG8iAAAKAhEib50AAApvqwAACox4AAABKAQAAAZvJAAACgJ7AgAABG8g
AAAKcrQPAHBvIgAACgIRIm+dAAAKb6wAAAooBAAABm8kAAAKAnsCAAAEbyAAAApy5A8AcG8iAAAK
AgIRIm+dAAAKb60AAAooBAAABigEAAAGbyQAAAoCewIAAARvIAAACnIMEABwbyIAAAoCAhEib50A
AApvrgAACigEAAAGKAQAAAZvJAAACgJ7AgAABG8gAAAKckgQAHBvIgAACgICESJvnQAACm+vAAAK
KAQAAAYoBAAABm8kAAAKAnsCAAAEbyAAAApychAAcG8iAAAKAhEib50AAApvsAAACigEAAAGbyQA
AAoCewIAAARvIAAACnKMEABwbyIAAAoCESJvnQAACm+xAAAKjD8AAAEoBAAABm8kAAAKAnsCAAAE
byAAAApywhAAcG8iAAAKAhEib50AAApvsgAACow/AAABKAQAAAZvJAAACgJ7AgAABG8gAAAKcugQ
AHBvIgAACgIRIm+dAAAKb7MAAAqMPwAAASgEAAAGbyQAAAoCewIAAARvIAAACnIIEQBwbyIAAAoC
ESJvnQAACm+0AAAKjD8AAAEoBAAABm8kAAAKAnsCAAAEbyAAAApyPhEAcG8iAAAKAhEib50AAApv
tQAACox5AAABKAQAAAZvJAAACgJ7AgAABG8gAAAKcoIRAHBvIgAACgIRIm+dAAAKb7YAAAqMPwAA
ASgEAAAGbyQAAAoCewIAAARvIAAACnK4EQBwbyIAAAoCESJvnQAACm+3AAAKKAQAAAZvJAAACgJ7
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
AAAKKAQAAAZvJAAACgJ7AgAABG8gAAAKcgIWAHBvIgAACgIRJ2/ZAAAKjIgAAAEoBAAABm8kAAAK
AnsCAAAEbyAAAApyHhYAcG8iAAAKAhEnb9oAAAooBAAABm8kAAAKAnsCAAAEbyUAAAomAigDAAAG
ESNvVgAACjqY/f//3hURI3UVAAABExgRGCwHERhvVwAACtwRIW9WAAAKOjD3///eFREhdRUAAAET
GBEYLAcRGG9XAAAK3BEfb1YAAAo6Btr//94VER91FQAAARMYERgsBxEYb1cAAArcER5v2wAACm89
AAAKEx84ozAAABEfbz4AAAp0HwAAARMoAnsCAAAEckQWAHBvHgAACgJ7AgAABBpvHwAACgJ7AgAA
BG8gAAAKcm4WAHAebyEAAAomAnsCAAAEbyAAAApy+goAcB5vIQAACiYCewIAAARvIAAACnIHAgBw
HwxvIQAACiYCewIAAARvIAAACnIPAgBwHwxvIQAACiYCewIAAARvIAAACnKOFgBwHwxvIQAACiYC
ewIAAARvIAAACnLoDQBwHwxvIQAACiYCewIAAARvIAAACnJOCwBwHwxvIQAACiYCewIAAARvIAAA
CnJ2CwBwHwxvIQAACiYCewIAAARvIAAACnKwCwBwHwxvIQAACiYCewIAAARvIAAACnKiFgBwHwxv
IQAACiYCewIAAARvIAAACnLSCwBwHwxvIQAACiYCewIAAARvIAAACnKXBABwHwxvIQAACiYCewIA
AARvIAAACnKQCwBwHwxvIQAACiYCewIAAARvIAAACnJJBABwHwxvIQAACiYCewIAAARvIAAACnJv
BABwHwxvIQAACiYCewIAAARvIAAACnLlAwBwHwxvIQAACiYCewIAAARvIAAACnJ4DQBwHwxvIQAA
CiYCewIAAARvIAAACnJJBwBwHwxvIQAACiYCewIAAARvIAAACnIxBgBwHwxvIQAACiYCewIAAARv
IAAACnJPBgBwHwxvIQAACiYCewIAAARvIAAACnJfAwBwHwxvIQAACiYCewIAAARvIAAACnJzAwBw
HwxvIQAACiYCewIAAARvIAAACnKXAwBwHwxvIQAACiYCewIAAARvIAAACnK7AwBwHwxvIQAACiYC
ewIAAARvIAAACnLVAwBwHwxvIQAACiYCewIAAARvIAAACnJuFgBwbyIAAAoYbyMAAAoCewIAAARv
IAAACnL6CgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnIHAgBwbyIAAAoXbyMAAAoCewIAAARvIAAA
CnIPAgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnKOFgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnLo
DQBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJOCwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJ2CwBw
byIAAAoXbyMAAAoCewIAAARvIAAACnKwCwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnKiFgBwbyIA
AAoXbyMAAAoCewIAAARvIAAACnLSCwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnKXBABwbyIAAAoX
byMAAAoCewIAAARvIAAACnKQCwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJJBABwbyIAAAoXbyMA
AAoCewIAAARvIAAACnJvBABwbyIAAAoXbyMAAAoCewIAAARvIAAACnLlAwBwbyIAAAoXbyMAAAoC
ewIAAARvIAAACnJ4DQBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJJBwBwbyIAAAoXbyMAAAoCewIA
AARvIAAACnIxBgBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJPBgBwbyIAAAoXbyMAAAoCewIAAARv
IAAACnJfAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnJzAwBwbyIAAAoXbyMAAAoCewIAAARvIAAA
CnKXAwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnK7AwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnLV
AwBwbyIAAAoXbyMAAAoCewIAAARvIAAACnL6CgBwbyIAAAoCEQuMSwAAASgEAAAGbyQAAAoCewIA
AARvIAAACnIHAgBwbyIAAAoCEShvJgAACigEAAAGbyQAAAoCewIAAARvIAAACnIPAgBwbyIAAAoC
EShvJwAACigEAAAGbyQAAAoCewIAAARvIAAACnKOFgBwbyIAAAoCEShv3AAACow/AAABKAQAAAZv
JAAACgJ7AgAABG8gAAAKcugNAHBvIgAACgIRKG/dAAAKjIoAAAEoBAAABm8kAAAKAnsCAAAEbyAA
AApyTgsAcG8iAAAKAhEob94AAAooBAAABm8kAAAKAnsCAAAEbyAAAApydgsAcG8iAAAKAhEob98A
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
AACqDAEAAAAAAAYAIglPFAYAxglPFAYAWwglFA8A9RQAAAYAiAhIDwYABQlIDwYA5ghIDwYArQlI
DwYAQglIDwYAWwlIDwYAnwhIDwYAuggLCwoAdgnqCwoABQfqCw4AnxF7Fw4AbwJ7FxIAnxNvFAYA
7BNQFhIAXgdvFBIAHwNvFAYA2gQUDRIAexhvFA4AfA1XARIAtQJvFBIAJA5vFBIAMAhvFBIACw1v
FBIAmxJvFBIA5hhvFBIApAxvFBIA0BJvFBIARw5vFBIA1QZvFBIAQg1vFBIAzA5vFBIAMg5vFBIA
EhJvFBIAmAtvFAYAPhcUDQYAGw0UDQYAPgglFAYAUxOaFAYAZhIdDxYA1QeDDBYAbwiDDBYAPAcI
DwYAFQhPFAoAcQzqCxoAWRXjBRoAxQTjBQYAdAsUDR4AnxOiBg4AkhFTEg4AZQJTEg4ANwZXAQ4A
IhF7Fw4AiBN7Fw4AKQZXAQ4AfBNTEg4AuxFXAR4AoxdvFB4AdhJvFAYALA0UDRYA4Q8/AhIA1AJv
FB4ABBJvFAYACQAUDR4AORdvFAYA2gUUDR4AyxdvFB4AyhdvFAYAQRgUDRIAtg9vFB4AORFvFAYA
AwAUDR4AXgeiBh4ArgNvFB4ALhdvFB4A6gdvFBIAew9vFBIAZRlvFBIA9A5vFAYANA0UDRIAUhFv
FA4ATRdXAQ4AkA9XAQ4AuwRXAQ4APxBXAQYAnQYUDQ4A0wVXAQ4AUQZXARYAsheDDBYA+AeDDBYA
YxODDA4AIQdXAQYAtxgUDRIAbA9vFBIANxhvFBIAWg9vFBIAcgJvFBIA4ApvFBIAYwNvFBIA+gNv
FBIA7wNvFBIAwANvFBIA+BNvFBYA0BeDDBIAVBBvFBIAZQVvFBIASwVvFBIAkwRvFBIAyQ9vFBIA
0whvFBIAQwZvFBIAdwRvFBIA7gpvFBIAlgJvFBIABApvFBIArxhvFBIAZwFvFBIAXQZvFBIAvxNv
FBIANg9vFBIAZw5vFBIAEBBvFAYAzgRQFhIA1RBvFBIAgAZvFBIAIhlvFBIAMhlvFBIAqhNvFBIA
axFvFBIA6hhvFBIATApvFBIAABBvFBIA+AlvFBIA9RBvFBIAkQZvFBIAvQpvFBIAixBvFBIApA9v
FBIA5BFvFBIAGQZvFBIAIxBvFBIAqxBvFBIAbBBvFBIAwRBvFBIA+gpvFBIA0QpvFBIAbgZvFBIA
SgRvFBIAjwNvFBIApQpvFBIA8g9vFA4ADBFTEgYAIwUUDQYA+BhIDwAAAAAPAAAAAAABAAEAAQAQ
AHENoAs5AAEAAQAAABAAoRQUFZ0AAwAGAAABEADDFRQVuQAFAAoAAwEAAOgWAAChAAYADQABAA4O
VgMBAF4CWgMRACANXgMRAPUGYwMRAOsCaAMGBkQBbANWgNgWbwNWgMIGbwNQIAAAAACGAHcNBgAB
AAy5AAAAAIEAGgEQAAEANLkAAAAAhgDHFgYAAgB/uQAAAACGAOkMcwMCAJC5AAAAAIYYGBQGAAMA
mLkAAAAAgxgYFAYAAwCguQAAAACTCE8TeAMDAMy5AAAAAJMI3QZ+AwMA07kAAAAAkwjpBoQDAwDb
uQAAAACWCGAXiwMEAOK5AAAAAIYYGBQGAAQA6rkAAAAAkRgeFJADBAAAAAEAIQEAAAEAnAsAAAEA
IQoJABgUAQARABgUBgAZABgUCgApABgUEAAxABgUEAA5ABgUEABBABgUEABJABgUEABRABgUEABZ
ABgUEABhABgUEABpABgUBgBJARgUBgBpARgUFQB5ARgUBgBxAOAWdACBAVUVegCJAQINgACRAeQJ
hwA5AWELiwCZAScXjwCJABgUBgChAUUXEAB5ABgUBgCZAScXlgCpAUwLEACpAT0NBgCBABgUBgCB
AIMRnACxAWcYEACxATMGogCBALgWqQDBAaMBrwDBAQINuQDZAa0RwADZAe4JxwCxAQ4ZzADpARgA
iwDpAX4FiwChATcLiwChAXIS0AChAeEAiwChAfMM1gChAXsL2gChATEC1gCJANAC4AChAXEOiwCh
AfgR5gChAe8A7AChAZkMiwChAbYFiwAhAqcB1gAhArES8AAhAm8H8ADpAUMSiwDpAU0AiwAxAtoX
9gDZAeQJhwBBAgEA/ACJAJgVAQFRAgoUBwGRAOUXhwCZAT4ZDAFhAoQH8ACZAJUYiwCZAEoZzABh
AmQK7ABhAvkE1gBhAqQEzABhAtgOiwCZADYAiwBhAqoDEgFhArYOiwCZANoXGAFxAh8C8ABxAqYH
HQGZAIoUIwGhADcLiwChAGEZKQGhAOYOLwGhAAUTiwChAEkYNQGhAGMWzAChANoXOwGhAJUTGAGR
AFUY1gCpAGcHBgCZAAEXQAGxAAYDRgGxAEwBSwGxANoXOwGxAJUTGAGpAkoVUQGxAgINVwG5AvcV
XgHBAgINZAG5ANkM1gC5AJEX1gC5ALQB7AC5AIUS7AC5ABwSiwC5AJUFiwC5AIoYiwC5AAwGagG5
AG8DcAG5ABAKhwC5AH0OiwC5AIoLzAC5AMICiwC5ABMMzAC5AAEZ1gC5ALEEdgG5AocFiwC5ACcK
1gC5ACULfAHhAv4HggHhAm4TiAHhAgkE1gD5AvEXzAC5AskYjgEBA4QClAGZAEUUmQHBAAYDRgHB
AHcYnwHBACwYpAERAzgUqgEZAwINsAEhA14YiwCZAboCtwHBAKQEzADBANgOiwDBAMoGiwDBAPkE
1gDBAPsCvQHBAJUYiwDBAEoZzADBAEgDwwHBANgDyQHBAKIOiwDBABUX7ADBAOsDzwHBALwD1QHB
AIgV2wHBANoXOwHBAJUTGAFZA24TiAHBABIW4QHJAL0AiwDJAPkE1gDJAGEF5wHJAEcF7QHJAIYE
8wHJANoX+QHJAFQHOwHJAJUTGAHJAKYV/gHRAAcIBAKJAwMGCgKJA20EEAKJA/sCFgKJA/sX7ACJ
A4cNHAKJA5ICIQKJAw4YzACJA5QKJwKJA6sYLQKJA/MSiwCJA34AiwCJA/YNHAKJA5MHiwCJA2MB
MwKJAygSiwCJA6YNHAKJA9UNHAKJA70NHAKJA5YNHAKJAwEC1gCJAzIK1gCJA+YE1gCJA+MB1gCJ
A7AHOQKJAwUF1gCJAysTiwCJAxgE1gCJA7sTPwKJAzIPRQKJA5gJBAKJA9oXSwKJA1QHOwGJA5UT
GAGJAwMWUQLxAwoUBwHZAPsCFgKJA4sWVwLhAFgAiwDhANoXBALhAHwGXQLhAB4ZYwLhAC4ZaQLh
AKYTbwLhAH4FiwDhAPkE1gDhAF0OSwLhAFQHOwHhAJUTGAHJAAQVdQLpANgYewIpBBkTiwApBKQF
iwApBDIK1gApBEgKgQIpBGMV1gApBNoXSwIpBFQHOwEpBJUTGAEpBNUVhwLxAIMKjQLxAGgAiwDB
AKYWkwL5AMoB1gD5AAMGmQL5APsCnwL5AEgDwwH5AKIOiwD5ACEW1gD5ABUX7AD5AGQK7AD5ANgD
yQH5AJUYiwD5AEoZzAD5ANoX+QH5AFQHOwH5AJUTGAH5ABIWpQIBAc0AiwD5AHsVqwIJAcoB1gAJ
Ac4RsQIJAQwGtwIJAfsCHAIJAfkE1gAJARkTiwAJAWoLiwAJAd4TiwAJAdATiwAJAcYFiwAJAXYK
iwAJAbUViwAJAYwOiwAJAdoXvQIJAasC+QEJAVQHOwEJAZUTGAH5AOAVwgIRARUX7AARAVQNzAAR
AdoXvQIRAasC+QERAVQHOwERAZUTGAERAT8WyAIZAdoXzgIZAcYSvQIZAasC+QEZAVQHOwEZAZUT
GAEZARIW1AIhARYOSwL5AHwW2gKZBAIN4AIpAaUAiwApASoDvQEpAZUYiwApAVgDwwEpAQYDRgEp
AXcYnwEpARUX7AApAWQK7AApAdoXvQIpAasC+QEpAVQHOwEpAZUTGAEpAfYK5wIpAdgDyQEpAUoZ
zAApARUDRgEpAR8AiwApAeECiwApAfsC7QIpAaIOiwApAUgDwwEpAQMG8wKhBDME+QKhBNcB1gCh
BCgMNQGhBL0YNQGhBIAD/wKhBEEMNQGhBFUMNQGhBPsCBQNRAvEXzADBAMwVCwMxAf0AiwAxAd0S
iwAxARkTiwAxAR8MiwAxAdoX+QExAVQHOwExAZUAiwAxAZUTGAExAfYWiwAxAZEBiwAxAXoCiwAx
AYABiwAxAeQJiwAxAVUXiwCBAWwXAQDZBPEXzADBAQINFQPBAV0KHANxABgUBgA5ARgUBgDJAjUF
IwPJAvQYLANRARgUMgNxARgUBgAIABwATAMIACAAUQMpAHMAzQMuAAsApQMuABMArgMuABsAzQMu
ACMA1gMuACsABgQuADMABgQuADsADAQuAEMA1gMuAEsAIQQuAFMABgQuAFsARwRDAGMAUQNJAHMA
zQNjAGsAUQOhAHsAUQMcABEDAwABAAQAAwAAAFMTlAMAAP0GmgMAAGQXoAMCAAcAAwACAAgABQAB
AAkABQACAAoABwAEgAAAAQAAAJIZi6QAAAAAAACgCwAABAAAAAAAAAAAAAAAOgN3AQAAAAAOAAAA
AAAAAAAAAABDA8sLAAAAAAQAAAAAAAAAAAAAADoDVwEAAAAADQAAAAAAAAAAAAAAQwNvFAAAAAAE
AAAAAAAAAAAAAAA6AxQNAAAAAA4AAAAAAAAAAAAAAEMDJQEAAAAADQAAAAAAAAAAAAAAQwOiBgAA
AAAAAAAAAQAAAKsUAAAFAAIAAAAAAABUb0ludDMyAEludDY0ADxNb2R1bGU+AGdldF9JRABnZXRf
UmVtb3RlRGF0YVNvdXJjZUlEAGdldF9NYXN0ZXJEYXRhU291cmNlSUQAZ2V0X1NpdGVJRABnZXRf
QXR0cmlidXRlSUQAZ2V0X1NvdXJjZUF0dHJpYnV0ZUlEAGdldF9PcmRlckJ5QXR0cmlidXRlSUQA
Z2V0X1BhcmVudEtwaUlEAGdldF9BZ2dyZWdhdGlvbkRlc2lnbklEAGdldF9EaW1lbnNpb25JRABn
ZXRfQ3ViZURpbWVuc2lvbklEAGdldF9TZXNzaW9uSUQAZ2V0X0VkaXRpb25JRABnZXRfQXNzb2Np
YXRlZE1lYXN1cmVHcm91cElEAEV4ZWN1dGVTUUwATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AZ2V0X1NjaGVtYQBTeXN0ZW0uRGF0YQBnZXRfTWVtYmVyc1dpdGhEYXRhAG1z
Y29ybGliAGdldF9UcmVuZEdyYXBoaWMAZ2V0X1N0YXR1c0dyYXBoaWMAQWRkAGdldF9Jc0xvYWRl
ZABnZXRfQXV0b0luY3JlbWVudFNlZWQAZ2V0X0lzTGlua2VkAGdldF9FbmFibGVkAGdldF9BdHRy
aWJ1dGVIaWVyYXJjaHlFbmFibGVkAGdldF9BdHRyaWJ1dGVIaWVyYXJjaHlPcmRlcmVkAGdldF9M
YXN0UHJvY2Vzc2VkAGdldF9Db25uZWN0ZWQAU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVk
AFNRTGNtZABEYkNvbW1hbmQAU3FsQ29tbWFuZABnZXRfVHJlbmQAR2V0VXBwZXJCb3VuZABnZXRf
RGlzY3JldGl6YXRpb25NZXRob2QAZ2V0X1BhcmVudEN1YmUAUmVwbGFjZQBnZXRfTmFtZXNwYWNl
AGdldF9TZXNzaW9uVHJhY2UAZ2V0X1NsaWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfU291cmNlAGdl
dF9EYXRhU291cmNlAGdldF9SZW1vdGVEYXRhU291cmNlAGdldF9BZ2dyZWdhdGlvbkluc3RhbmNl
U291cmNlAGdldF9TdG9yYWdlTW9kZQBnZXRfQ3VycmVudFN0b3JhZ2VNb2RlAGdldF9EYXRlVGlt
ZU1vZGUAZ2V0X09ubGluZU1vZGUAUHJvYWN0aXZlQ2FjaGluZ09ubGluZU1vZGUAZ2V0X1JlYWRX
cml0ZU1vZGUAZ2V0X1NjcmlwdEVycm9ySGFuZGxpbmdNb2RlAGdldF9Qcm9jZXNzaW5nTW9kZQBn
ZXRfU2NyaXB0Q2FjaGVQcm9jZXNzaW5nTW9kZQBnZXRfRGVzaWduTW9kZQBnZXRfS2V5VW5pcXVl
bmVzc0d1YXJhbnRlZQBnZXRfQWdncmVnYXRpb25TdG9yYWdlAFByb2FjdGl2ZUNhY2hpbmdBZ2dy
ZWdhdGlvblN0b3JhZ2UAZ2V0X1VzYWdlAEF0dHJpYnV0ZVVzYWdlAGdldF9BbGxNZW1iZXJBZ2dy
ZWdhdGlvblVzYWdlAGdldF9MYW5ndWFnZQBnZXRfVGFibGUARGF0YVRhYmxlAFZhcmlhYmxlAElF
bnVtZXJhYmxlAElEaXNwb3NhYmxlAGdldF9Jc0FnZ3JlZ2F0YWJsZQBnZXRfVmlzaWJsZQBnZXRf
QXR0cmlidXRlSGllcmFyY2h5VmlzaWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBnZXRfTWVtYmVyVW5pcXVlTmFtZVN0eWxlAGdldF9IaWVyYXJjaHlVbmlxdWVOYW1lU3R5
bGUAZ2V0X05hbWUAZ2V0X1RhYmxlTmFtZQBnZXRfQ29sdW1uTmFtZQBnZXRfQWxsTWVtYmVyTmFt
ZQBnZXRfUHJvZHVjdE5hbWUAZ2V0X0ZvbnROYW1lAERhdGFTZXREYXRlVGltZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAGdldF9UeXBlAGdldF9EYXRhVHlwZQBNZWFzdXJlRGF0YVR5
cGUAU3FsRGJUeXBlAHNldF9Db21tYW5kVHlwZQBBdHRyaWJ1dGVUeXBlAE1hcHBpbmdUeXBlAE9w
dGltaXphdGlvblR5cGUAUGFydGl0aW9uVHlwZQBnZXRfUmVsYXRpb25zaGlwVHlwZQBNZWFzdXJl
R3JvdXBUeXBlAE1pY3Jvc29mdC5BbmFseXNpc1NlcnZpY2VzLkNvcmUARmFpbHVyZQBnZXRfRGVm
YXVsdE1lYXN1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBnZXRfUGFyZW50RGF0YWJhc2UARGlzcG9zZQBnZXRfTGFzdFNjaGVt
YVVwZGF0ZQBnZXRfTGFzdFVwZGF0ZQBnZXRfTmFtaW5nVGVtcGxhdGUAZ2V0X1N0YXRlAGdldF9B
dHRyaWJ1dGVIaWVyYXJjaHlPcHRpbWl6ZWRTdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBBbmFs
eXNpc1N0YXRlAElTaXRlAGdldF9TaXRlAGdldF9BdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUAQ3ViZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
Z2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AERpbWVuc2lvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAZ2V0X09yZGVyQnlBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBz
ZXRfVmFsdWUASGlkZUlmVmFsdWUAUm9vdElmVmFsdWUAZ2V0X0RlZmF1bHRWYWx1ZQB2YWx1ZQBn
ZXRfVW5pcXVlAGdldF9NZW1iZXJOYW1lc1VuaXF1ZQBnZXRfTWVtYmVyS2V5c1VuaXF1ZQBSZW1v
dmUAZ2V0X0VzdGltYXRlZFNpemUAZ2V0X0ZvbnRTaXplAGdldF9IaWRlTWVtYmVySWYAZ2V0X1Jv
b3RNZW1iZXJJZgBQcm9hY3RpdmVDYWNoaW5nQmluZGluZwBNZWFzdXJlR3JvdXBCaW5kaW5nAFRh
YnVsYXJCaW5kaW5nAERhdGFTb3VyY2VWaWV3QmluZGluZwBnZXRfUHJvYWN0aXZlQ2FjaGluZwBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGdldF9Db2x1bW5NYXBwaW5nAGdldF9Db25uZWN0aW9u
U3RyaW5nAHNldF9Db25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAGdldF9Gb3JtYXRTdHJpbmcAZ2V0
X0NhcHR1cmVMb2cAZ2V0X01heExlbmd0aABLcGkAb2JqAFNUX2QyODM1NzVlOGJhMzQ5ZGQ5N2Fh
OWYwODVmZWVhYTM4LmNzcHJvagBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBnZXRfT3JkaW5hbABnZXRfR29hbABn
ZXRfRm9yY2VSZWJ1aWxkSW50ZXJ2YWwAZ2V0X1NpbGVuY2VJbnRlcnZhbABnZXRfU2lsZW5jZU92
ZXJyaWRlSW50ZXJ2YWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdl
dF9Qcm9kdWN0TGV2ZWwAU1RfZDI4MzU3NWU4YmEzNDlkZDk3YWE5ZjA4NWZlZWFhMzguY3Nwcm9q
LmRsbABnZXRfQWxsb3dEQk51bGwAQ2hlY2tudWxsAGdldF9DYXB0dXJlWG1sAGdldF9JdGVtAERh
dGFJdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AVGltZVNwYW4AT3BlbgBBZ2dy
ZWdhdGlvbkRlc2lnbgBnZXRfRXN0aW1hdGVkUGVyZm9ybWFuY2VHYWluAFNjcmlwdE1haW4ARGF0
YUNvbHVtbgBnZXRfTmFtZUNvbHVtbgBnZXRfVmFsdWVDb2x1bW4AZ2V0X0N1c3RvbVJvbGx1cENv
bHVtbgBnZXRfVW5hcnlPcGVyYXRvckNvbHVtbgBnZXRfQ3VzdG9tUm9sbHVwUHJvcGVydGllc0Nv
bHVtbgBnZXRfU2tpcHBlZExldmVsc0NvbHVtbgBTUUxjb25uAGdldF9EaW1lbnNpb24AQ3ViZURp
bWVuc2lvbgBBZ2dyZWdhdGlvbkRpbWVuc2lvbgBNZWFzdXJlR3JvdXBEaW1lbnNpb24AZ2V0X1Bh
cmVudERpbWVuc2lvbgBnZXRfVmVyc2lvbgBnZXRfRXhwcmVzc2lvbgBnZXRfTWVhc3VyZUV4cHJl
c3Npb24AZ2V0X1N0b3JhZ2VMb2NhdGlvbgBnZXRfRGJTdG9yYWdlTG9jYXRpb24AQWdncmVnYXRp
b24AZ2V0X0NvbGxhdGlvbgBnZXRfSXNvbGF0aW9uAERhdGFTb3VyY2VJc29sYXRpb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AZ2V0X0luc3RhbmNlU2VsZWN0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAENvbW1hbmRDb2xsZWN0aW9uAEN1YmVDb2xsZWN0aW9uAERhdGFT
b3VyY2VDb2xsZWN0aW9uAERhdGFUYWJsZUNvbGxlY3Rpb24ATWVhc3VyZUNvbGxlY3Rpb24ARGF0
YWJhc2VDb2xsZWN0aW9uAEN1YmVBdHRyaWJ1dGVDb2xsZWN0aW9uAFN0cmluZ0NvbGxlY3Rpb24A
S3BpQ29sbGVjdGlvbgBMZXZlbENvbGxlY3Rpb24ARGF0YUl0ZW1Db2xsZWN0aW9uAEFnZ3JlZ2F0
aW9uRGVzaWduQ29sbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBDdWJlRGltZW5zaW9uQ29s
bGVjdGlvbgBBZ2dyZWdhdGlvbkRpbWVuc2lvbkNvbGxlY3Rpb24ATWVhc3VyZUdyb3VwRGltZW5z
aW9uQ29sbGVjdGlvbgBBZ2dyZWdhdGlvbkNvbGxlY3Rpb24AUGFydGl0aW9uQ29sbGVjdGlvbgBB
dHRyaWJ1dGVSZWxhdGlvbnNoaXBDb2xsZWN0aW9uAE1lYXN1cmVHcm91cENvbGxlY3Rpb24ARGJQ
YXJhbWV0ZXJDb2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ATW9kZWxDb21wb25lbnRD
b2xsZWN0aW9uAERhdGFTb3VyY2VWaWV3Q29sbGVjdGlvbgBDdWJlSGllcmFyY2h5Q29sbGVjdGlv
bgBzZXRfQ29ubmVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBzZXRfRGlyZWN0aW9u
AFBhcmFtZXRlckRpcmVjdGlvbgBnZXRfQWdncmVnYXRlRnVuY3Rpb24AQWdncmVnYXRpb25GdW5j
dGlvbgBnZXRfRWRpdGlvbgBTZXJ2ZXJFZGl0aW9uAFBhcnRpdGlvbgBnZXRfQ2FwdGlvbgBnZXRf
TWVtYmVyc1dpdGhEYXRhQ2FwdGlvbgBnZXRfRGVzY3JpcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9u
AEN1bHR1cmVJbmZvAGdldF9Db25uZWN0aW9uSW5mbwBnZXRfQXV0b0luY3JlbWVudFN0ZXAAQXR0
cmlidXRlUmVsYXRpb25zaGlwAGdldF9DcmVhdGVkVGltZXN0YW1wAGdldF9QYXJlbnRNZWFzdXJl
R3JvdXAAZ2V0X0N1cnJlbnRUaW1lTWVtYmVyAGdldF9EZWZhdWx0TWVtYmVyAGdldF9NYW5hZ2Vk
UHJvdmlkZXIAZ2V0X0Rpc3BsYXlGb2xkZXIAZ2V0X0F0dHJpYnV0ZUhpZXJhcmNoeURpc3BsYXlG
b2xkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBJQ29udGFpbmVyAGdldF9Db250YWluZXIARGJQYXJh
bWV0ZXIAU3FsUGFyYW1ldGVyAGdldF9QYXJlbnRTZXJ2ZXIAZ2V0X092ZXJyaWRlQmVoYXZpb3IA
Z2V0X0dyb3VwaW5nQmVoYXZpb3IAZ2V0X0ZvcmVDb2xvcgBnZXRfQmFja0NvbG9yAElFbnVtZXJh
dG9yAE1lYXN1cmVFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBnZXRfQ29tbWFuZHMAZ2V0X0N1YmVzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMATWljcm9zb2Z0LkFuYWx5c2lzU2VydmljZXMAZ2V0X0RhdGFTb3VyY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAU1RfZDI4MzU3NWU4YmEzNDlkZDk3YWE5ZjA4NWZlZWFhMzguY3Nwcm9qLlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfSGllcmFyY2hp
ZXMAU1RfZDI4MzU3NWU4YmEzNDlkZDk3YWE5ZjA4NWZlZWFhMzguY3Nwcm9qLlByb3BlcnRpZXMA
Z2V0X1RhYmxlcwBnZXRfVmFyaWFibGVzAGdldF9BbGxvd0R1cGxpY2F0ZU5hbWVzAGdldF9NZWFz
dXJlcwBnZXRfQWxsTWVhc3VyZXMAZ2V0X0RhdGFiYXNlcwBnZXRfQXR0cmlidXRlcwBnZXRfRm9u
dEZsYWdzAFNldHRpbmdzAGdldF9LcGlzAGdldF9MZXZlbHMAZ2V0X0FnZ3JlZ2F0aW9uRGVzaWdu
cwBnZXRfQ29sdW1ucwBnZXRfS2V5Q29sdW1ucwBnZXRfRGltZW5zaW9ucwBnZXRfSWdub3JlVW5y
ZWxhdGVkRGltZW5zaW9ucwBnZXRfQWdncmVnYXRpb25zAFN5c3RlbS5Db2xsZWN0aW9ucwBnZXRf
TWF4QWN0aXZlQ29ubmVjdGlvbnMAZ2V0X1BhcnRpdGlvbnMAZ2V0X0F0dHJpYnV0ZVJlbGF0aW9u
c2hpcHMAZ2V0X01lYXN1cmVHcm91cHMAZ2V0X1BhcmFtZXRlcnMAUmVtb3ZlUGFyYW1ldGVycwBT
dWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfU3RhdHVzAGdldF9EYXRhU291cmNlVmll
d3MAZ2V0X0VzdGltYXRlZFJvd3MAQ29uY2F0AFByb2Nlc3NhYmxlTWFqb3JPYmplY3QAQ29ubmVj
dABEYXRhU2V0AGdldF9XZWlnaHQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRh
dGEuU3FsQ2xpZW50AGdldF9BdXRvSW5jcmVtZW50AE5hbWVkQ29tcG9uZW50AE1hcnNoYWxCeVZh
bHVlQ29tcG9uZW50AElNb2RlbENvbXBvbmVudABnZXRfUGFyZW50AGdldF9DdXJyZW50AGdldF9D
b3VudABnZXRfRXN0aW1hdGVkQ291bnQAZ2V0X0Rpc2NyZXRpemF0aW9uQnVja2V0Q291bnQAZ2V0
X0RlZmF1bHRNZHhTY3JpcHQAQ29udmVydABnZXRfVGltZW91dABNb3ZlTmV4dABnZXRfVGV4dABz
ZXRfQ29tbWFuZFRleHQAZ2V0X0RhdGFTb3VyY2VWaWV3AGdldF9QcmVmaXgAZ2V0X0FnZ3JlZ2F0
aW9uUHJlZml4AGdldF9PcmRlckJ5AEFycmF5AGdldF9MYXRlbmN5AGdldF9QcmltYXJ5S2V5AGdl
dF9IaWVyYXJjaHkAQ3ViZUhpZXJhcmNoeQBnZXRfQXNzZW1ibHkAZ2V0X1JlYWRPbmx5AEV4ZWN1
dGVOb25RdWVyeQBnZXRfQ2FyZGluYWxpdHkAZ2V0X09wdGlvbmFsaXR5AG9wX0VxdWFsaXR5AGdl
dF9Qcm9jZXNzaW5nUHJpb3JpdHkAZ2V0X0Nvbm5lY3Rpb25TdHJpbmdTZWN1cml0eQAAAAABACFV
AHMAZQByADoAOgBPAEwAQQBQAFMAZQByAHYAZQByAAAZVQBzAGUAcgA6ADoATwBMAEEAUABEAEIA
AB1VAHMAZQByADoAOgBPAEwAQQBQAEMAdQBiAGUAACtVAHMAZQByADoAOgBTAFMAQQBTAEEATQBP
AEQAQgBTAGUAcgB2AGUAcgAAL1UAcwBlAHIAOgA6AFMAUwBBAFMAQQBNAE8ARABCAEQAYQB0AGEA
YgBhAHMAZQAAOVAAcgBvAHYAaQBkAGUAcgA9AE0AUwBPAEwAQQBQADsARABhAHQAYQAgAFMAbwB1
AHIAYwBlAD0AAAM7AAAZRABhAHQAYQAgAFMAbwB1AHIAYwBlAD0AACM7AEkAbgBpAHQAaQBhAGwA
IABDAGEAdABhAGwAbwBnAD0AADU7AEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0
AHkAPQBTAFMAUABJADsAAC1zAHAAXwBBAE0ATwBEAEIARABlAGwAZQB0AGUATQBlAHQAYQBkAGEA
dABhAAAXQABTAGUAcgB2AGUAcgBOAGEAbQBlAAAPQABEAGIATgBhAG0AZQAAE0AAQwB1AGIAZQBO
AGEAbQBlAAAdcwBwAF8AQQBNAE8ARABCAFMAZQByAHYAZQByAAATQABTAGUAcgB2AGUAcgBJAGQA
AAdAAEkARAAAC0AATgBhAG0AZQAAI0AAQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAA
H0AAQwBvAG4AbgBlAGMAdABpAG8AbgBJAG4AZgBvAAAVQABTAGUAcwBzAGkAbwBuAEkARAAAF0AA
QwBhAHAAdAB1AHIAZQBYAG0AbAAAF0AAQwBhAHAAdAB1AHIAZQBMAG8AZwAAFUAAQwBvAG4AbgBl
AGMAdABlAGQAABtAAFMAZQBzAHMAaQBvAG4AVAByAGEAYwBlAAARQABWAGUAcgBzAGkAbwBuAAAR
QABFAGQAaQB0AGkAbwBuAAAVQABFAGQAaQB0AGkAbwBuAEkARAAAG0AAUAByAG8AZAB1AGMAdABM
AGUAdgBlAGwAABlAAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAF0AAUwBlAHIAdgBlAHIATQBvAGQA
ZQAAE0AASQBzAEwAbwBhAGQAZQBkAAAjQABDAHIAZQBhAHQAZQBkAFQAaQBtAGUAcwB0AGEAbQBw
AAAjQABMAGEAcwB0AFMAYwBoAGUAbQBhAFUAcABkAGEAdABlAAAZQABEAGUAcwBjAHIAaQBwAHQA
aQBvAG4AAA9AAFMAaQB0AGUASQBEAAAPQABQAGEAcgBlAG4AdAAAI3MAcABfAEEATQBPAEQAQgBE
AGEAdABhAGIAYQBzAGUAcwAAF0AARABhAHQAYQBiAGEAcwBlAEkAZAAAF0AATABhAHMAdABVAHAA
ZABhAHQAZQAAJUAAQQBnAGcAcgBlAGcAYQB0AGkAbwBuAFAAcgBlAGYAaQB4AAAnQABQAHIAbwBj
AGUAcwBzAGkAbgBnAFAAcgBpAG8AcgBpAHQAeQAAHUAARQBzAHQAaQBtAGEAdABlAGQAUwBpAHoA
ZQAAEUAAVgBpAHMAaQBiAGwAZQAAE0AATABhAG4AZwB1AGEAZwBlAAAVQABDAG8AbABsAGEAdABp
AG8AbgAAJ0AATQBhAHMAdABlAHIARABhAHQAYQBTAG8AdQByAGMAZQBJAEQAAB1AAFIAZQBhAGQA
VwByAGkAdABlAE0AbwBkAGUAACVAAEQAYgBTAHQAbwByAGEAZwBlAEwAbwBjAGEAdABpAG8AbgAA
FUAASQBtAGEAZwBlAFAAYQB0AGgAAB1AAEkAbQBhAGcAZQBVAG4AaQBxAHUAZQBJAEQAABtAAEkA
bQBhAGcAZQBWAGUAcgBzAGkAbwBuAAATQABJAG0AYQBnAGUAVQByAGwAACVAAFMAdABvAHIAYQBn
AGUARQBuAGcAaQBuAGUAVQBzAGUAZAAAJ0AAQwBvAG0AcABhAHQAaQBiAGkAbABpAHQAeQBMAGUA
dgBlAGwAACFAAEQAaQByAGUAYwB0AFEAdQBlAHIAeQBNAG8AZABlAAAdQABMAGEAcwB0AFAAcgBv
AGMAZQBzAHMAZQBkAAANQABTAHQAYQB0AGUAACVzAHAAXwBBAE0ATwBEAEIARABhAHQAYQBTAG8A
dQByAGMAZQAAG0AARABhAHQAYQBTAG8AdQByAGMAZQBJAGQAADNAAEMAbwBuAG4AZQBjAHQAaQBv
AG4AUwB0AHIAaQBuAGcAUwBlAGMAdQByAGkAdAB5AAAVQABJAHMAbwBsAGEAdABpAG8AbgAAIUAA
TQBhAG4AYQBnAGUAZABQAHIAbwB2AGkAZABlAHIAABFAAFQAaQBtAGUAbwB1AHQAACtAAE0AYQB4
AEEAYwB0AGkAdgBlAEMAbwBuAG4AZQBjAHQAaQBvAG4AcwAAG0AAUABhAHIAZQBuAHQAUwBlAHIA
dgBlAHIAAC1zAHAAXwBBAE0ATwBEAEIARABhAHQAYQBTAG8AdQByAGMAZQBWAGkAZQB3AAAjQABE
AGEAdABhAFMAbwB1AHIAYwBlAFYAaQBlAHcASQBkAAAfQABEAGEAdABhAFMAbwB1AHIAYwBlAE4A
YQBtAGUAAA9AAFMAYwBoAGUAbQBhAABFcwBwAF8AQQBNAE8ARABCAEQAYQB0AGEAUwBvAHUAcgBj
AGUAVgBpAGUAdwBUAGEAYgBsAGUAYwBvAGwAdQBtAG4AcwAAGUAAQQBsAGwAbwB3AEQAQgBOAHUA
bABsAAAdQABBAHUAdABvAEkAbgBjAHIAZQBtAGUAbgB0AAAlQABBAHUAdABvAEkAbgBjAHIAZQBt
AGUAbgB0AFMAZQBlAGQAACVAAEEAdQB0AG8ASQBuAGMAcgBlAG0AZQBuAHQAUwB0AGUAcAAAEUAA
QwBhAHAAdABpAG8AbgAAF0AAQwBvAGwAdQBtAG4ATgBhAG0AZQAAD0AAUAByAGUAZgBpAHgAABNA
AEQAYQB0AGEAVAB5AHAAZQAAG0AARABhAHQAZQBUAGkAbQBlAE0AbwBkAGUAABtAAEQAZQBmAGEA
dQBsAHQAVgBhAGwAdQBlAAAXQABFAHgAcAByAGUAcwBzAGkAbwBuAAAVQABNAGEAeABMAGUAbgBn
AHQAaAAAFUAATgBhAG0AZQBzAHAAYQBjAGUAABFAAE8AcgBkAGkAbgBhAGwAABNAAFIAZQBhAGQA
TwBuAGwAeQAADUAAVABhAGIAbABlAAAPQABVAG4AaQBxAHUAZQAAHUAAQwBvAGwAdQBtAG4ATQBh
AHAAcABpAG4AZwAAC0AAUwBpAHQAZQAAFUAAQwBvAG4AdABhAGkAbgBlAHIAABdAAEQAZQBzAGkA
ZwBuAE0AbwBkAGUAAICTIABVAHAAZABhAHQAZQAgAEQAYQB0AGEAUwBvAHUAcgBjAGUAVgBpAGUA
dwBUAGEAYgBsAGUAYwBvAGwAdQBtAG4AcwAgACAAUwBFAFQAIABQAHIAaQBtAGEAcgB5AEsAZQB5
ACAAPQAgADEAIAAgAFcASABFAFIARQAgAFsAVABhAGIAbABlAF0AIAA9ACAAJwABLycAIAAgACAA
IABBAE4ARAAgAEMAbwBsAHUAbQBuAE4AYQBtAGUAIAA9ACAAJwABAycAARlzAHAAXwBBAE0ATwBE
AEIAQwB1AGIAZQAAD0AAQwB1AGIAZQBJAGQAACNAAEQAZQBmAGEAdQBsAHQATQBkAHgAUwBjAHIA
aQBwAHQAAB9AAEQAZQBmAGEAdQBsAHQATQBlAGEAcwB1AHIAZQAAD0AAUwBvAHUAcgBjAGUAABdA
AE0AZAB4AFMAYwByAGkAcAB0AHMAABlAAFMAdABvAHIAYQBnAGUATQBvAGQAZQAAH0AAUAByAG8A
YwBlAHMAcwBpAG4AZwBNAG8AZABlAAAhQABTAHQAbwByAGEAZwBlAEwAbwBjAGEAdABpAG8AbgAA
HUAARQBzAHQAaQBtAGEAdABlAGQAUgBvAHcAcwAANUAAUwBjAHIAaQBwAHQAQwBhAGMAaABlAFAA
cgBvAGMAZQBzAHMAaQBuAGcATQBvAGQAZQAAMUAAUwBjAHIAaQBwAHQARQByAHIAbwByAEgAYQBu
AGQAbABpAG4AZwBNAG8AZABlAAAZQABBAGwAbABNAGUAYQBzAHUAcgBlAHMAAAUnACcAAStzAHAA
XwBBAE0ATwBEAEIAQwB1AGIAZQBEAGkAbQBlAG4AcwBpAG8AbgAAIUAAQwB1AGIAZQBEAGkAbQBl
AG4AcwBpAG8AbgBJAGQAABlAAEQAaQBtAGUAbgBzAGkAbwBuAEkARAAAM0AASABpAGUAcgBhAHIA
YwBoAHkAVQBuAGkAcQB1AGUATgBhAG0AZQBTAHQAeQBsAGUAAC1AAE0AZQBtAGIAZQByAFUAbgBp
AHEAdQBlAE4AYQBtAGUAUwB0AHkAbABlAAA1QABBAGwAbABNAGUAbQBiAGUAcgBBAGcAZwByAGUA
ZwBhAHQAaQBvAG4AVQBzAGEAZwBlAAAfQABQAGEAcgBlAG4AdABEAGEAdABhAGIAYQBzAGUAADVz
AHAAXwBBAE0ATwBEAEIARABpAG0AZQBuAHMAaQBvAG4AQQB0AHQAcgBpAGIAdQB0AGUAABlAAEEA
dAB0AHIAaQBiAHUAdABlAEkAZAAAC0AAVAB5AHAAZQAADUAAVQBzAGEAZwBlAAAfQABFAHMAdABp
AG0AYQB0AGUAZABDAG8AdQBuAHQAABdAAE4AYQBtAGUAQwBvAGwAdQBtAG4AACtAAEQAaQBzAGMA
cgBlAHQAaQB6AGEAdABpAG8AbgBNAGUAdABoAG8AZAAANUAARABpAHMAYwByAGUAdABpAHoAYQB0
AGkAbwBuAEIAdQBjAGsAZQB0AEMAbwB1AG4AdAAAG0AAUgBvAG8AdABNAGUAbQBiAGUAcgBJAGYA
ABFAAE8AcgBkAGUAcgBCAHkAAB1AAEQAZQBmAGEAdQBsAHQATQBlAG0AYgBlAHIAACdAAE8AcgBk
AGUAcgBCAHkAQQB0AHQAcgBpAGIAdQB0AGUASQBEAAApQABTAGsAaQBwAHAAZQBkAEwAZQB2AGUA
bABzAEMAbwBsAHUAbQBuAAAfQABOAGEAbQBpAG4AZwBUAGUAbQBwAGwAYQB0AGUAADdAAE4AYQBt
AGkAbgBnAFQAZQBtAHAAbABhAHQAZQBUAHIAYQBuAHMAbABhAHQAaQBvAG4AcwAAIUAATQBlAG0A
YgBlAHIAcwBXAGkAdABoAEQAYQB0AGEAAC9AAE0AZQBtAGIAZQByAHMAVwBpAHQAaABEAGEAdABh
AEMAYQBwAHQAaQBvAG4AACdAAEMAdQBzAHQAbwBtAFIAbwBsAGwAdQBwAEMAbwBsAHUAbQBuAAA7
QABDAHUAcwB0AG8AbQBSAG8AbABsAHUAcABQAHIAbwBwAGUAcgB0AGkAZQBzAEMAbwBsAHUAbQBu
AAApQABVAG4AYQByAHkATwBwAGUAcgBhAHQAbwByAEMAbwBsAHUAbQBuAAAZQABWAGEAbAB1AGUA
QwBvAGwAdQBtAG4AADVAAEEAdAB0AHIAaQBiAHUAdABlAEgAaQBlAHIAYQByAGMAaAB5AE8AcgBk
AGUAcgBlAGQAACVAAE0AZQBtAGIAZQByAE4AYQBtAGUAcwBVAG4AaQBxAHUAZQAAH0AASQBzAEEA
ZwBnAHIAZQBnAGEAdABhAGIAbABlAAA1QABBAHQAdAByAGkAYgB1AHQAZQBIAGkAZQByAGEAcgBj
AGgAeQBFAG4AYQBiAGwAZQBkAABDQABBAHQAdAByAGkAYgB1AHQAZQBIAGkAZQByAGEAcgBjAGgA
eQBPAHAAdABpAG0AaQB6AGUAZABTAHQAYQB0AGUAADVAAEEAdAB0AHIAaQBiAHUAdABlAEgAaQBl
AHIAYQByAGMAaAB5AFYAaQBzAGkAYgBsAGUAAEFAAEEAdAB0AHIAaQBiAHUAdABlAEgAaQBlAHIA
YQByAGMAaAB5AEQAaQBzAHAAbABhAHkARgBvAGwAZABlAHIAAC9AAEsAZQB5AFUAbgBpAHEAdQBl
AG4AZQBzAHMARwB1AGEAcgBhAG4AdABlAGUAACNAAEcAcgBvAHUAcABpAG4AZwBCAGUAaABhAHYA
aQBvAHIAACVAAEkAbgBzAHQAYQBuAGMAZQBTAGUAbABlAGMAdABpAG8AbgAAIUAAUAByAG8AYwBl
AHMAcwBpAG4AZwBTAHQAYQB0AGUAAEVAAEEAdAB0AHIAaQBiAHUAdABlAEgAaQBlAHIAYQByAGMA
aAB5AFAAcgBvAGMAZQBzAHMAaQBuAGcAUwB0AGEAdABlAAAbQABGAG8AcgBtAGEAdABTAHQAcgBp
AG4AZwAAMUAAVgBpAHMAdQBhAGwAaQB6AGEAdABpAG8AbgBQAHIAbwBwAGUAcgB0AGkAZQBzAAAj
QABPAHIAZABlAHIAQgB5AEEAdAB0AHIAaQBiAHUAdABlAAA3cwBwAF8AQQBNAE8ARABCAEEAdAB0
AHIAaQBiAHUAdABlAEsAZQB5AEMAbwBsAHUAbQBuAHMAABlAAEEAdAB0AHIAaQBiAHUAdABlAEkA
RAAAHUAASwBlAHkAQwBvAGwAdQBtAG4ATgBhAG0AZQAAO3MAcABfAEEATQBPAEQAQgBBAHQAdABy
AGkAYgB1AHQAZQBSAGUAbABhAHQAaQBvAG4AcwBoAGkAcAAAD0AAQwB1AGIAZQBJAEQAACVAAFAA
YQByAGUAbgB0AEEAdAB0AHIAaQBiAHUAdABlAEkARAAAI0AAUgBlAGwAYQB0AGkAbwBuAHMAaABp
AHAAVAB5AHAAZQAAGUAAQwBhAHIAZABpAG4AYQBsAGkAdAB5AAAZQABPAHAAdABpAG8AbgBhAGwA
aQB0AHkAACNAAE8AdgBlAHIAcgBpAGQAZQBCAGUAaABhAHYAaQBvAHIAACFAAFAAYQByAGUAbgB0
AEQAaQBtAGUAbgBzAGkAbwBuAAAjcwBwAF8AQQBNAE8ARABCAEgAaQBlAHIAYQByAGMAaAB5AAAZ
QABIAGkAZQByAGEAcgBjAGgAeQBJAGQAAB1AAEQAaQBzAHAAbABhAHkARgBvAGwAZABlAHIAAB1A
AEEAbABsAE0AZQBtAGIAZQByAE4AYQBtAGUAACNAAE0AZQBtAGIAZQByAEsAZQB5AHMAVQBuAGkA
cQB1AGUAAClAAEEAbABsAG8AdwBEAHUAcABsAGkAYwBhAHQAZQBOAGEAbQBlAHMAAB1AAFMAdABy
AHUAYwB0AHUAcgBlAFQAeQBwAGUAAC1zAHAAXwBBAE0ATwBEAEIASABpAGUAcgBhAHIAYwBoAHkA
TABlAHYAZQBsAAAfQABIAGkAZQByAGEAcgBjAGgAeQBMAGUAdgBlAGwAABtAAEgAaQBkAGUATQBl
AG0AYgBlAHIASQBmAAAlQABTAG8AdQByAGMAZQBBAHQAdAByAGkAYgB1AHQAZQBJAGQAAClzAHAA
XwBBAE0ATwBEAEIATQBlAGEAcwB1AHIAZQBHAHIAbwB1AHAAAB9AAE0AZQBhAHMAdQByAGUARwBy
AG8AdQBwAEkAZAAAE0AASQBzAEwAaQBuAGsAZQBkAAA1QABJAGcAbgBvAHIAZQBVAG4AcgBlAGwA
YQB0AGUAZABEAGkAbQBlAG4AcwBpAG8AbgBzAAA7cwBwAF8AQQBNAE8ARABCAE0AZQBhAHMAdQBy
AGUARwByAG8AdQBwAEQAaQBtAGUAbgBzAGkAbwBuAAAfcwBwAF8AQQBNAE8ARABCAE0AZQBhAHMA
dQByAGUAABVAAE0AZQBhAHMAdQByAGUASQBkAAAlQABBAGcAZwByAGUAZwBhAHQAZQBGAHUAbgBj
AHQAaQBvAG4AABVAAEIAYQBjAGsAQwBvAGwAbwByAAAVQABGAG8AcgBlAEMAbwBsAG8AcgAAE0AA
RgBvAG4AdABOAGEAbQBlAAATQABGAG8AbgB0AFMAaQB6AGUAABVAAEYAbwBuAHQARgBsAGEAZwBz
AAAlQABNAGUAYQBzAHUAcgBlAEUAeABwAHIAZQBzAHMAaQBvAG4AABdAAFAAYQByAGUAbgB0AEMA
dQBiAGUAADNzAHAAXwBBAE0ATwBEAEIAQQBnAGcAcgBlAGcAYQB0AGkAbwBuAEQAZQBzAGkAZwBu
AAApQABBAGcAZwByAGUAZwBhAHQAaQBvAG4ARABlAHMAaQBnAG4ASQBkAAAzQABFAHMAdABpAG0A
YQB0AGUAZABQAGUAcgBmAG8AcgBtAGEAbgBjAGUARwBhAGkAbgAAJ3MAcABfAEEATQBPAEQAQgBB
AGcAZwByAGUAZwBhAHQAaQBvAG4AAB1AAEEAZwBnAHIAZQBnAGEAdABpAG8AbgBJAGQAACdAAFAA
YQByAGUAbgB0AE0AZQBhAHMAdQByAGUARwByAG8AdQBwAAA5cwBwAF8AQQBNAE8ARABCAEEAZwBn
AHIAZQBnAGEAdABpAG8AbgBEAGkAbQBlAG4AcwBpAG8AbgAAGUAARABpAG0AZQBuAHMAaQBvAG4A
SQBkAAAjcwBwAF8AQQBNAE8ARABCAFAAYQByAHQAaQB0AGkAbwBuAAApQABBAGcAZwByAGUAZwBh
AHQAaQBvAG4ARABlAHMAaQBnAG4ASQBEAAA1QABBAGcAZwByAGUAZwBhAHQAaQBvAG4ASQBuAHMA
dABhAG4AYwBlAFMAbwB1AHIAYwBlAAAnQABDAHUAcgByAGUAbgB0AFMAdABvAHIAYQBnAGUATQBv
AGQAZQAATUAAQwB1AHIAcgBlAG4AdABTAHQAcgBpAG4AZwBTAHQAbwByAGUAcwBDAG8AbQBwAGEA
dABpAGIAaQBsAGkAdAB5AEwAZQB2AGUAbAAAI0AARABpAHIAZQBjAHQAUQB1AGUAcgB5AFUAcwBh
AGcAZQAAGUAAUABhAHIAdABpAHQAaQBvAG4ASQBkAAAjQABQAHIAbwBhAGMAdABpAHYAZQBDAGEA
YwBoAGkAbgBnAAAjQABSAGUAbQBvAHQAZQBEAGEAdABhAFMAbwB1AHIAYwBlAAAnQABSAGUAbQBv
AHQAZQBEAGEAdABhAFMAbwB1AHIAYwBlAEkARAAADUAAUwBsAGkAYwBlAAA/QABTAHQAcgBpAG4A
ZwBTAHQAbwByAGUAcwBDAG8AbQBwAGEAdABpAGIAaQBsAGkAdAB5AEwAZQB2AGUAbAAAMXMAcABf
AEEATQBPAEQAQgBQAHIAbwBhAGMAdABpAHYAZQBDAGEAYwBoAGkAbgBnAAAnQABBAGcAZwByAGUA
ZwBhAHQAaQBvAG4AUwB0AG8AcgBhAGcAZQAAEUAARQBuAGEAYgBsAGUAZAAAK0AARgBvAHIAYwBl
AFIAZQBiAHUAaQBsAGQASQBuAHQAZQByAHYAYQBsAAARQABMAGEAdABlAG4AYwB5AAAXQABPAG4A
bABpAG4AZQBNAG8AZABlAAAhQABTAGkAbABlAG4AYwBlAEkAbgB0AGUAcgB2AGEAbAAAMUAAUwBp
AGwAZQBuAGMAZQBPAHYAZQByAHIAaQBkAGUASQBuAHQAZQByAHYAYQBsAAAXcwBwAF8AQQBNAE8A
RABCAEsAUABJAAAzQABBAHMAcwBvAGMAaQBhAHQAZQBkAE0AZQBhAHMAdQByAGUARwByAG8AdQBw
AEkARAAAJUAAQwB1AHIAcgBlAG4AdABUAGkAbQBlAE0AZQBtAGIAZQByAAALQABHAG8AYQBsAAAZ
QABQAGEAcgBlAG4AdABLAHAAaQBJAEQAAA9AAFMAdABhAHQAdQBzAAAdQABTAHQAYQB0AHUAcwBH
AHIAYQBwAGgAaQBjAAANQABUAHIAZQBuAGQAABtAAFQAcgBlAG4AZABHAHIAYQBwAGgAaQBjAAAN
QABWAGEAbAB1AGUAAA9AAFcAZQBpAGcAaAB0AAB/UwBUAF8AZAAyADgAMwA1ADcANQBlADgAYgBh
ADMANAA5AGQAZAA5ADcAYQBhADkAZgAwADgANQBmAGUAZQBhAGEAMwA4AC4AYwBzAHAAcgBvAGoA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAw1bLsPgwj0id8PG1
b4wQFAAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgLFXBzIODg4ODg4OEkUICAgICAgICAgICAgS
SRJNEkkSURJVElkIHRJdCAgSYRJJEmUSSRJpEkkSbRJxEnUSeRJ9EoCBEoCFEoCJEoCNEkkSgJEI
EoCVEoCZBSAAEoDBBSAAEoDFBiABEoDJHAMgABwDIAAOBgADDg4ODgUAAQ4dDgUgAQESPQYgAQER
gN0FIAASgOEJIAISgOUOEYDpBiABEoDlDgYgAQERgPEEIAEBHAMgAAgFIAASgPkDIAACBSAAEoEB
BSAAEoEFBSAAEYEJAyAACgUgABGBFQUgABKBHQQAAQgcBSAAEoElBCAAEkkFAAICDg4FIAARgTUE
IAASRQUgABGBPQUgABKBQQUgABGBRQUgABGBSQUgABGBTQQgABJNBSAAEoFRBCAAElEFIAASgVUF
IAASgVkGIAESgV0IBSAAEoFhBSABEl0IBSAAEoFlBSAAEYFpBSAAEoFdBSAAEYFtBSAAEoF1BSAA
EoF5BSAAHRJdBCABCAgFIAASgYUEIAASWQUgABKBiQUgABKBjQYgARKBkQgFIAIODg4FIAASgZUF
IAARgZkFIAARgZ0FIAARgaEFIAARgaUFIAASgakFIAASgbEFIAARgbUFIAARgbkFIAARgb0EIAAS
YQUgABKBwQUgABKBxQUgABGByQUgABGBzQUgABKB0QQgABJtBSAAEYHVBSAAEYHZBSAAEYHdBSAA
EYHhBSAAEYHlBSAAEYHpBSAAEYHtBSAAEoHxBSAAEoH1BSAAEoH9BSAAEYIBBSAAEYIFBSAAEYIJ
BSAAEYINBSAAEoIRBSAAEoIVBSAAEYIZBSAAEoIdBSAAEYIhBSAAEoIlBSAAEYIpBSAAEoItBSAA
EoIxBSAAEoI1BSAAEYI5BSAAEYI9BCAAEn0FIAASgkEFIAASgkUFIAASgIkFIAASgkkFIAASgk0G
IAESgJUIBSAAEoJRBSAAEoJVBSAAEYJZBSAAEYJdBSAAEYJhBSAAEoJlBSAAEoJpAwcBCAYgARKA
5QgGIAEBEoDlCAABEoFlEYJxBSAAEoJ1ByACAQ4SgnUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQB
AAAAAwYSPQMGEkEEBhKAqQQGEoCtAwYSEAIGCAMGERQEIAEOHAUAABKAqQUAABKArQYAAQESgK0E
AAASEAMAAAEFCAASgKkFCAASgK0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAvAQAqU1RfZDI4MzU3NWU4YmEzNDlkZDk3YWE5ZjA4NWZlZWFhMzgu
Y3Nwcm9qAAAFAQAAAAAUAQAPSGV3bGV0dC1QYWNrYXJkAAAlAQAgQ29weXJpZ2h0IEAgSGV3bGV0
dC1QYWNrYXJkIDIwMTIAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAALAFAQAAAAAA
AAAAAMoFAQAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8BQEAAAAAAAAAAAAAAF9Db3JEbGxNYWlu
AG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAA
AAAAAQAAAAAASAAAAFggAQCWBAAAAAAAAAAAAACWBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8A
SQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAi6SSGQAAAQCLpJIZPwAAAAAAAAAEAAAAAgAAAAAAAAAA
AAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwA
YQB0AGkAbwBuAAAAAAAAALAE9gMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA0gMA
AAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAAEAAEAABAEMA
bwBtAHAAYQBuAHkATgBhAG0AZQAAAAAASABlAHcAbABlAHQAdAAtAFAAYQBjAGsAYQByAGQAAAB+
ACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AZAAyADgAMwA1ADcA
NQBlADgAYgBhADMANAA5AGQAZAA5ADcAYQBhADkAZgAwADgANQBmAGUAZQBhAGEAMwA4AC4AYwBz
AHAAcgBvAGoAAAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADUA
NAA2AC4ANAAyADEAMgAzAAAAAAB+AC8AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGQAMgA4ADMANQA3ADUAZQA4AGIAYQAzADQAOQBkAGQAOQA3AGEAYQA5AGYAMAA4ADUAZgBlAGUA
YQBhADMAOAAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAGYAIQABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAZQB3AGwAZQB0AHQALQBQAGEA
YwBrAGEAcgBkACAAMgAwADEAMgAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBr
AHMAAAAAAAAAAACGAC8AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8A
ZAAyADgAMwA1ADcANQBlADgAYgBhADMANAA5AGQAZAA5ADcAYQBhADkAZgAwADgANQBmAGUAZQBh
AGEAMwA4AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAdgArAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwBkADIAOAAzADUANwA1AGUAOABiAGEAMwA0ADkAZABkADkANwBhAGEAOQBm
ADAAOAA1AGYAZQBlAGEAYQAzADgALgBjAHMAcAByAG8AagAAAAAAQgAPAAEAUAByAG8AZAB1AGMA
dABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADUANAA2AC4ANAAyADEAMgAzAAAAAABGAA8AAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADUANAA2AC4ANAAyADEA
MgAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAM
AAAA3DUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="61"
            Column="13" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="261.6,44"
          Id="Package\Load AMO DB"
          TopLeft="264.928575846614,151.100002041985" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>